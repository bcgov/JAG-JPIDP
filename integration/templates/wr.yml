kind: KafkaConnector
apiVersion: kafka.strimzi.io/v1beta2
metadata:
  name: jpidp-outbox-connector
  labels:
    strimzi.io/cluster: jpidp-debezium-cluster
  namespace: 5b7aa5-test
spec:
  class: io.debezium.connector.postgresql.PostgresConnector
  tasksMax: 1
  config:
    connector.class: "io.debezium.connector.postgresql.PostgresConnector"
    plugin.name: "pgoutput"
    database.hostname: "postgres-debezium-postgresql.5b7aa5-test.svc.cluster.local"
    database.port: "5432"
    database.user: "postgres"
    database.password: ""
    database.dbname: "jpidp"
    database.server.name: "postgres"
    tombstones.on.delete: "false"
    schema.include.list: "public"
    table.include.list: " public.outboxevent"
    transforms: "outbox"
    transforms.outbox.type : "io.debezium.transforms.outbox.EventRouter"
    transforms.outbox.route.topic.replacement: "${routedByValue}.events"
    transforms.outbox.table.field.event.id: "id"
    transforms.outbox.table.field.event.key: "aggregateId"
    transforms.outbox.table.field.event.payload: "payload"
    transforms.outbox.table.field.event.payload.id: "aggregateId"
    transforms.outbox.table.field.event.timestamp: "timeStamp"
    transforms.outbox.route.by.field: "aggregateType"
    key.converter.schemas.enable: "true"
    key.converter: "io.apicurio.registry.utils.converter.ExtJsonConverter"
    value.converter.apicurio.registry.global-id: io.apicurio.registry.serde.strategy.GetOrCreateIdStrategy 
    key.converter.apicurio.registry.global-id: io.apicurio.registry.serde.strategy.GetOrCreateIdStrategy
    key.converter.apicurio.registry.url: http://dems-apicurioregistry-kafkasql-service.5b7aa5-dev.svc.cluster.local:8080
    value.converter.apicurio.registry.url: http://dems-apicurioregistry-kafkasql-service.5b7aa5-dev.svc.cluster.local:8080
    key.converter.apicurio.registry.converter.serializer: "io.apicurio.registry.serde.jsonschema.JsonSchemaKafkaSerializer"
    key.converter.apicurio.registry.converter.deserializer: "io.apicurio.registry.serde.avro.JsonSchemaKafkaDeserializer"
    value.converter.apicurio.registry.converter.serializer: "io.apicurio.registry.serde.avro.JsonSchemaKafkaSerializer"
    value.converter.apicurio.registry.converter.deserializer: "io.apicurio.registry.serde.avro.JsonSchemaKafkaDeserializer"
    key.converter.apicurio.registry.auto-register: "true"
    key.converter.apicurio.registry.find-latest: "true"
    key.converter.apicurio.registry.as-confluent: "true"
    value.converter.apicurio.registry.auto-register: "true"
    value.converter.apicurio.registry.find-latest: "true"
    value.converter.apicurio.registry.as-confluent: "true"
    value.converter: "io.apicurio.registry.utils.converter.ExtJsonConverter"
    value.converter.delegate.converter.type: "org.apache.kafka.connect.json.JsonConverter"
    value.converter.delegate.converter.type.schemas.enable: "false"
    transforms.outbox.table.expand.json.payload: "true"
    transforms.outbox.table.fields.additional.placement: "type:header:eventType"             
    key.converter.apicurio.auth.service.url: "https://sso-dev-5b7aa5-dev.apps.silver.devops.gov.bc.ca/auth"
    key.converter.apicurio.auth.realm: "DEMSPOC"
    key.converter.apicurio.auth.client.id: "registry-client-api"
    key.converter.apicurio.auth.client.secret: ""
    value.converter.apicurio.auth.service.url: "https://sso-dev-5b7aa5-dev.apps.silver.devops.gov.bc.ca/auth"
    value.converter.apicurio.auth.realm: "DEMSPOC"
    value.converter.apicurio.auth.client.id: "registry-client-api"
    value.converter.apicurio.auth.client.secret: ""