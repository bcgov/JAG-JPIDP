/* tslint:disable */
/* eslint-disable */
/**
 * Approval Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CommonModelsApprovalApprovalModel,
  CommonModelsApprovalApproveDenyInput,
  MicrosoftAspNetCoreMvcProblemDetails,
} from '../models';
import {
    CommonModelsApprovalApprovalModelFromJSON,
    CommonModelsApprovalApprovalModelToJSON,
    CommonModelsApprovalApproveDenyInputFromJSON,
    CommonModelsApprovalApproveDenyInputToJSON,
    MicrosoftAspNetCoreMvcProblemDetailsFromJSON,
    MicrosoftAspNetCoreMvcProblemDetailsToJSON,
} from '../models';

export interface ApiApprovalsPendingGetRequest {
    pendingOnly?: boolean;
}

export interface ApiApprovalsResponsePostRequest {
    commonModelsApprovalApproveDenyInput?: CommonModelsApprovalApproveDenyInput;
}

/**
 * ApprovalsApi - interface
 * 
 * @export
 * @interface ApprovalsApiInterface
 */
export interface ApprovalsApiInterface {
    /**
     * 
     * @param {boolean} [pendingOnly] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApprovalsApiInterface
     */
    apiApprovalsPendingGetRaw(requestParameters: ApiApprovalsPendingGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CommonModelsApprovalApprovalModel>>>;

    /**
     */
    apiApprovalsPendingGet(requestParameters: ApiApprovalsPendingGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CommonModelsApprovalApprovalModel>>;

    /**
     * 
     * @param {CommonModelsApprovalApproveDenyInput} [commonModelsApprovalApproveDenyInput] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApprovalsApiInterface
     */
    apiApprovalsResponsePostRaw(requestParameters: ApiApprovalsResponsePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CommonModelsApprovalApprovalModel>>;

    /**
     */
    apiApprovalsResponsePost(requestParameters: ApiApprovalsResponsePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CommonModelsApprovalApprovalModel>;

}

/**
 * 
 */
export class ApprovalsApi extends runtime.BaseAPI implements ApprovalsApiInterface {

    /**
     */
    async apiApprovalsPendingGetRaw(requestParameters: ApiApprovalsPendingGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CommonModelsApprovalApprovalModel>>> {
        const queryParameters: any = {};

        if (requestParameters.pendingOnly !== undefined) {
            queryParameters['pendingOnly'] = requestParameters.pendingOnly;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/approvals/pending`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CommonModelsApprovalApprovalModelFromJSON));
    }

    /**
     */
    async apiApprovalsPendingGet(requestParameters: ApiApprovalsPendingGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CommonModelsApprovalApprovalModel>> {
        const response = await this.apiApprovalsPendingGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiApprovalsResponsePostRaw(requestParameters: ApiApprovalsResponsePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CommonModelsApprovalApprovalModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/approvals/response`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CommonModelsApprovalApproveDenyInputToJSON(requestParameters.commonModelsApprovalApproveDenyInput),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CommonModelsApprovalApprovalModelFromJSON(jsonValue));
    }

    /**
     */
    async apiApprovalsResponsePost(requestParameters: ApiApprovalsResponsePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CommonModelsApprovalApprovalModel> {
        const response = await this.apiApprovalsResponsePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
