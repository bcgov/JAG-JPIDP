{{- if empty .Values.sa_password }}
apiVersion: v1
kind: Secret
metadata:
  name: jum-database-secret
  labels:
    {{- include "mssql-latest.labels" . | nindent 4 }}
type: Opaque
data:
 #sa_password : {{ .Values.sa_password | b64enc | quote}}
   # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secret := (lookup "v1" "Secret" .Release.Namespace "jum-database-secret") | default dict }}
  # set $sa_password to existing secret data or generate a random one when not exists
  {{- $sa_password := (get $secretData "jum-database-secret") | default (randAlphaNum 32 | b64enc) }}
  # generate 32 chars long random string, base64 encode it and then double-quote the result string.
  sa_password: {{ $sa_password | b64enc | quote }}
{{- end }}