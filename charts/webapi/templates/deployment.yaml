{{ $release := .Release.Name }}
{{ $ocEnv := regexFind "([^-]*$)" .Release.Namespace }}
{{ $domain := .Values.global.vanityURL }}
{{ $isPR := hasPrefix "pr-" .Release.Name }}
## Derived release name
{{ $drn := ternary $release $ocEnv $isPR }}
{{ $isProd := contains "prod" $ocEnv }}
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "webapi.fullname" . }}
  labels:
    {{- include "webapi.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "webapi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.global.commit_sha }}
        commit_sha: {{ .Values.global.commit_sha }}
        {{- end}}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "webapi.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "webapi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.image.registry }}/{{ .Values.image.repository }}:{{ .Values.global.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PlrClient__Url
              value: http://{{ $release }}-plr-intake:8080/api
            - name: EDTDisclosureClient__Url
              valueFrom:
                secretKeyRef:
                  name: pidp-edt-disclosure-api
                  key: url
            - name: EdtCaseManagementClient__Url
              valueFrom:
                secretKeyRef:
                  name: pidp-edt-casemgmt-api
                  key: url
            - name: JumClient__Url
              valueFrom:
                secretKeyRef:
                  name: pidp-backend-jum-api
                  key: url
            #- name: JumClient__Url
            #  value: {{ .Values.jumClientURL }}
            # Skip null emails
            - name: JUSTIN_SKIP_USER_EMAIL_CHECK
              value: "true"
            - name: ASPNETCORE_ENVIRONMENT
              value: {{ .Values.aspnetcore.environment }}
            - name: Seq__Url
              valueFrom:
                secretKeyRef:
                  name: datalust-seq
                  key: url
            - name: DB_HOST
              value: pidp-postgresql
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pidp-postgresql
                  key: database-password
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: pidp-postgresql
                  key: database-user
            - name: POSTGRESQL_DATABASE
              {{- if $isPR }}
              value: pidp_{{ $drn }}
              {{ else }}
              valueFrom:
                secretKeyRef:
                  name: pidp-postgresql
                  key: database-name
              {{- end }}
            - name: ConnectionStrings__PidpDatabase
              valueFrom:
                configMapKeyRef:
                  name: pidp-api-database
                  key: CONNECTION_STRINGS_PIDP
            - name: KafkaCluster__BootstrapServers
              valueFrom:
                secretKeyRef:
                  name: kafkaconfig-jpidp
                  key: KafkaCluster__BootstrapServers
            - name: KafkaCluster__SaslOauthbearerProducerClientId
              valueFrom:
                secretKeyRef:
                  name: kafkaconfig-jpidp
                  key: KafkaCluster__ProducerClientId
            - name: KafkaCluster__SaslOauthbearerConsumerClientId
              valueFrom:
                secretKeyRef:
                  name: kafkaconfig-jpidp
                  key: KafkaCluster__ConsumerClientId
            - name: KafkaCluster__CaseAccessRequestTopicName
              valueFrom:
                secretKeyRef:
                  name: kafkaconfig-jpidp
                  key: KafkaCluster__CaseAccessRequestTopicName
            - name: KafkaCluster__ConsumerTopicName
              valueFrom:
                secretKeyRef:
                  name: kafkaconfig-jpidp
                  key: KafkaCluster__ConsumerTopicName
            - name: KafkaCluster__ProducerTopicName
              valueFrom:
                secretKeyRef:
                  name: kafkaconfig-jpidp
                  key: KafkaCluster__ProducerTopicName
 
            - name: KafkaCluster__SaslOauthbearerConsumerClientSecret
              valueFrom:
                secretKeyRef:
                  name: kafkaconfig-jpidp
                  key: KafkaCluster__SaslOauthbearerConsumerClientSecret
            - name: KafkaCluster__SaslOauthbearerProducerClientSecret
              valueFrom:
                secretKeyRef:
                  name: kafkaconfig-jpidp
                  key: KafkaCluster__SaslOauthbearerProducerClientSecret
            - name: KafkaCluster__SslCaLocation
              value: /opt/kafka/certificates/server-ca.crt
            - name: KafkaCluster__SslCertificateLocation
              value: /opt/kafka/certificates/client-ca.crt
            - name: KafkaCluster__SslKeyLocation
              value: /opt/kafka/certificates/client.key
            - name: KafkaCluster__SaslOauthbearerTokenEndpointUrl
              valueFrom:
                secretKeyRef:
                  name: kafkaconfig-jpidp
                  key: KafkaCluster__SaslOauthbearerTokenEndpointUrl
            - name: KafkaCluster__NotificationTopicName
              valueFrom:
                secretKeyRef:
                  name: kafkaconfig-jpidp
                  key: KafkaCluster__NotificationTopicName
            - name: KafkaCluster__CourtLocationAccessRequestTopic
              valueFrom:
                secretKeyRef:
                  name: kafkaconfig-jpidp
                  key: KafkaCluster__CourtLocationAccessRequestTopic
            - name: KafkaCluster__DisclosureUserCreationTopic
              valueFrom:
                secretKeyRef:
                  name: kafkaconfig-jpidp
                  key: KafkaCluster__DisclosureUserCreationTopic
            - name: KafkaCluster__PersonCreationTopic
              valueFrom:
                secretKeyRef:
                  name: kafkaconfig-jpidp
                  key: KafkaCluster__PersonCreationTopic
            - name: Telemetry__CollectorUrl
              valueFrom: 
                secretKeyRef:
                  name: telemetry-pidp
                  key: Telemetry__CollectorUrl
            - name: Telemetry__AzureConnectionString
              valueFrom: 
                secretKeyRef:
                  name: telemetry-pidp
                  key: Telemetry__AzureConnectionString
            - name: ApplicationUrl
              value: "https://{{ if $isProd }}{{else}}{{ $release }}.{{end}}{{ $domain }}"
            - name: CourtAccess__PollSeconds
              valueFrom: 
                secretKeyRef:
                  name: pidp-court-access
                  key: pollSeconds
            - name: SplunkConfig__CollectorToken
              valueFrom: 
                secretKeyRef:
                  name: splunk-config
                  key: SplunkConfig__CollectorToken
            - name: SplunkConfig__Host
              valueFrom: 
                secretKeyRef:
                  name: splunk-config
                  key: SplunkConfig__Host
            - name: JUSTIN_EMAIL_CHANGE_DISABLED
              value: "true"
            - name: EDTClient__Url
              valueFrom:
                secretKeyRef:
                  name: pidp-edt-service-api
                  key: EDTClient__Url
            - name: EDTClient__RealmUrl
              valueFrom:
                secretKeyRef:
                  name: pidp-edt-service-api
                  key: EDTClient__RealmUrl
            - name: EDTClient__ClientId
              valueFrom:
                secretKeyRef:
                  name: pidp-edt-service-api
                  key: EDTClient__ClientId
            - name: EDTClient__ClientSecret
              valueFrom:
                secretKeyRef:
                  name: pidp-edt-service-api
                  key: EDTClient__ClientSecret
            - name: KafkaCluster__ApprovalCreationTopic
              valueFrom:
                secretKeyRef:
                  name: kafkaconfig-jpidp
                  key: KafkaCluster__ApprovalCreationTopic
          volumeMounts:
            - name: kafka-truststore
              mountPath: "/opt/kafka/certificates"
              readOnly: true
          envFrom:
            - secretRef:
                name: keycloak-secrets
            - secretRef:
                name: canada-post-addresscomplete-secrets
            - secretRef:
                name: ches
            - configMapRef:
                name: mail-settings
            - secretRef:
                name: webapi-additional-envs
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: http
              scheme: HTTP
            timeoutSeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /health/liveness
              port: http
              scheme: HTTP
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 15
          startupProbe:
            httpGet:
              path: /health/liveness
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 30
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: kafka-truststore
          secret:
            secretName: kafka-cluster-client-truststore
