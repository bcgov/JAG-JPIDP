{{- if .Values.apicurio.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: pidp-kafka-postgresql
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
    {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "pidp-kafka-postgresql") | default dict }}
    {{- $kafkaPassword := (get $secretObj "kafka-password") | default dict }}
    {{- $postgresPasswprd := (get $secretObj "postgres-password") | default dict}}

    # set $jwtSecret to existing secret data or generate a random one when not exists
    {{- $kafkaPasswordSecret := (get $kafkaPassword "kafka-password") | default (randAlphaNum 32 | b64enc) }}
    {{- $postgresPasswordSecret := (get $postgresPasswprd "postgres-password") | default (randAlphaNum 32 | b64enc) }}

    kafka-password: {{ $kafkaPasswordSecret | quote }}
    postgres-password: {{ $postgresPasswordSecret | quote }}
{{- end}}