apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: metabase-persistent-template
  app: ${APP_NAME}
  app.kubernetes.io/part-of: ${APP_NAME}
message: |-
  The following service(s) have been created in your project:
    1. ${METABASE_SERVICE_NAME}

    2. ${METABASE_SERVICE_NAME}-database
         Username: ${POSTGRESQL_USER}
         Password: ${POSTGRESQL_PASSWORD}
    Database Name: ${POSTGRESQL_DATABASE}
   Connection URL: postgresql://${DATABASE_SERVICE_NAME}:5432/
metadata:
  name: ${METABASE_SERVICE_NAME}
  annotations:
    openshift.io/display-name: "Metabase backed by PostgreSQL"
    openshift.io/long-description: >
      This template provides a Metabase instance backed by a standalone PostgreSQL
      server. The database is stored on persistent storage.
    description: >
      This is a PostgreSQL backed Metabase (http://www.metabase.com/) deployment. Metabase is the
      easy, open source way for everyone in your company to ask questions and learn from data.
    iconClass: "pficon-trend-up"
    tags: analytics,database,metabase
  labels:
      app.kubernetes.io/part-of: ${APP_NAME}
      app.openshift.io/runtime: java
parameters:
- name: APP_NAME
  displayName: Application Name
  description: For grouping together utilities by scope
  value: utilities
- name: METABASE_SERVICE_NAME
  displayName: Metabase Service Name
  value: metabase
  required: true
- name: METABASE_ROUTE_HOST
  displayName: Metabase Route Host (FQDN)
  description: The hostname to use when creating an OpenShift Route (Leave blank to use defaults.)
  value: ""
  required: false
- name: DATA_VOLUME_CAPACITY
  displayName: Metabase Data Volume Capacity
  description: Volume space available for Metabase data e.g. 512Mi, 2Gi.
  required: true
  value: 1Gi
- name: METABASE_NAMESPACE
  displayName: Metabase Namespace
  description: The OpenShift Namespace where the Metabase ImageStream resides.
  required: true
  value: e27db1-tools
- name: METABASE_CPU_REQUEST
  description: Minimal CPU needed to run
  displayName: Metabase CPU Request
  value: 50m
- name: METABASE_CPU_LIMIT
  description: Maximum CPU allowed to use
  displayName: Metabase CPU Limit
  value: 500m
- name: METABASE_MEMORY_REQUEST
  description: Minimal amount of memory needed to run
  displayName: Metabase Memory Request
  value: 768Mi
- name: METABASE_MEMORY_LIMIT
  description: Maximum amount of memory allowed to use
  displayName: Metabase Memory Limit
  value: 1.5Gi
- description: The OpenShift Namespace where the PostgreSQL ImageStream resides.
  displayName: PostgreSQL Namespace
  name: POSTGRES_NAMESPACE
  value: openshift
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      app.openshift.io/connects-to: >-
        [{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"${METABASE_SERVICE_NAME}-database"}]  
    name: ${METABASE_SERVICE_NAME}
    labels:
      app.kubernetes.io/part-of: ${APP_NAME}
      app: ${APP_NAME}
      service: ${METABASE_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${METABASE_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          service: ${METABASE_SERVICE_NAME}
          deploymentconfig: ${METABASE_SERVICE_NAME}
          template: metabase
      spec:
        containers:
        - name: ${METABASE_SERVICE_NAME}
          image: ''
          imagePullPolicy: IfNotPresent
          env:
          - name: MB_DB_TYPE
            value: postgres
          - name: MB_DB_HOST
            value: postgresql
          - name: MB_DB_PORT
            value: "5432"
          - name: MB_DB_DBNAME
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: database-name
          - name: MB_DB_USER
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: database-user
          - name: MB_DB_PASS
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: database-password
          command:
             - java
          args:
            - '-Xmx300m'
            - '-Xss512k'
            - '-Dfile.encoding=UTF-8'
            - '-Dlogfile.path=target/log'
            - '-XX:+CMSClassUnloadingEnabled'
            - '-XX:+UseConcMarkSweepGC'
            - '-server'
            - '-jar'
            - '/app/metabase.jar'
          ports:
          - containerPort: 3000
            name: ${METABASE_SERVICE_NAME}
            protocol: TCP
          terminationMessagePath: /dev/termination-log
          resources:
            requests:
              cpu: "${METABASE_CPU_REQUEST}"
              memory: "${METABASE_MEMORY_REQUEST}"
            limits:
              cpu: "${METABASE_CPU_LIMIT}"
              memory: "${METABASE_MEMORY_LIMIT}"
          livenessProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 240
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 3
            timeoutSeconds: 3
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${METABASE_SERVICE_NAME}
        from:
          namespace: ${METABASE_NAMESPACE}
          kind: ImageStreamTag
          name: 'metabase:latest'
        lastTriggeredImage: ""
- kind: ImageStream
  apiVersion: image.openshift.io/v1
  metadata:
    name: metabase
    namespace: ${METABASE_NAMESPACE}
  spec:
    lookupPolicy:
      local: false
    tags:
      - name: latest
        annotations: null
        from:
          kind: DockerImage
          name: docker.io/metabase/metabase
        generation: 1
        importPolicy: {}
        referencePolicy:
          type: Source