openapi: 3.0.1
info:
  title: Disclosure Service API
  version: v1
paths:
  '/api/defence-disclosure/folio/{folioID}':
    get:
      tags:
        - DefenceDisclosure
      parameters:
        - name: folioID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.CaseModel'
            application/json:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.CaseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.CaseModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
  '/api/defence-disclosure/case/{key}':
    get:
      tags:
        - DefenceDisclosure
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.CaseModel'
            application/json:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.CaseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.CaseModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
  '/api/defence-disclosure/case/summary/{key}':
    get:
      tags:
        - DefenceDisclosure
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.CaseModel'
            application/json:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.CaseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.CaseModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
components:
  schemas:
    Common.Models.EDT.CaseModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        status:
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        errors:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Common.Models.EDT.Field'
          nullable: true
      additionalProperties: false
    Common.Models.EDT.Field:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        value:
          nullable: true
        display:
          type: boolean
      additionalProperties: false
    Microsoft.AspNetCore.Mvc.ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
  securitySchemes:
    Bearer:
      type: apiKey
      description: 'Standard Authorization header using the Bearer scheme. Example: "bearer {token}"'
      name: Authorization
      in: header
security:
  - Bearer: [ ]