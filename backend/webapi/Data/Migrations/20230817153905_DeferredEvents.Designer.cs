// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pidp.Data;
using Pidp.Models;

#nullable disable

namespace Pidp.Data.Migrations
{
    [DbContext(typeof(PidpDbContext))]
    [Migration("20230817153905_DeferredEvents")]
    partial class DeferredEvents
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Pidp.Models.AccessRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessTypeCode")
                        .HasColumnType("integer");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<Instant>("RequestedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("AccessRequest");
                });

            modelBuilder.Entity("Pidp.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Postal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProvinceCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.HasIndex("ProvinceCode");

                    b.ToTable("Address");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Address");
                });

            modelBuilder.Entity("Pidp.Models.AgencyRequestAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AttachmentId"));

                    b.Property<string>("AttachmentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AttachmentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SubmittingAgencyRequestRequestId")
                        .HasColumnType("integer");

                    b.Property<string>("UploadStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AttachmentId");

                    b.HasIndex("SubmittingAgencyRequestRequestId");

                    b.ToTable("AgencyRequestAttachment");
                });

            modelBuilder.Entity("Pidp.Models.ClientLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalInformation")
                        .HasColumnType("text");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LogLevel")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ClientLog");
                });

            modelBuilder.Entity("Pidp.Models.CorrectionServiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CorrectionServiceCode")
                        .HasColumnType("integer");

                    b.Property<int>("OrgainizationDetailId")
                        .HasColumnType("integer");

                    b.Property<string>("PeronalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CorrectionServiceCode");

                    b.HasIndex("OrgainizationDetailId");

                    b.ToTable("CorrectionServiceDetails");
                });

            modelBuilder.Entity("Pidp.Models.CourtLocationAccessRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RequestId"));

                    b.Property<string>("CourtLocationCode")
                        .HasColumnType("text");

                    b.Property<int?>("CourtSubLocationId")
                        .HasColumnType("integer");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant?>("DeletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("MessageId")
                        .HasColumnType("uuid");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<string>("RequestStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("RequestedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ValidUntil")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("RequestId");

                    b.HasIndex("CourtLocationCode");

                    b.HasIndex("CourtSubLocationId");

                    b.HasIndex("PartyId");

                    b.ToTable("CourtLocationAccessRequest");
                });

            modelBuilder.Entity("Pidp.Models.EmailLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant?>("DateSent")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LatestStatus")
                        .HasColumnType("text");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("MsgId")
                        .HasColumnType("uuid");

                    b.Property<string>("SendType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SentTo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StatusMessage")
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UpdateCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("EmailLog");
                });

            modelBuilder.Entity("Pidp.Models.Endorsement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Endorsement");
                });

            modelBuilder.Entity("Pidp.Models.EndorsementRelationship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EndorsementId")
                        .HasColumnType("integer");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EndorsementId");

                    b.HasIndex("PartyId");

                    b.ToTable("EndorsementRelationship");
                });

            modelBuilder.Entity("Pidp.Models.EndorsementRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalInformation")
                        .HasColumnType("text");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ReceivingPartyId")
                        .HasColumnType("integer");

                    b.Property<string>("RecipientEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RequestingPartyId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Instant>("StatusDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Token")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReceivingPartyId");

                    b.HasIndex("RequestingPartyId");

                    b.ToTable("EndorsementRequest");
                });

            modelBuilder.Entity("Pidp.Models.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PartyId")
                        .IsUnique();

                    b.ToTable("Facility");
                });

            modelBuilder.Entity("Pidp.Models.FutureUserChangeEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Instant>("Completed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("EventDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("FutureUserChangeEvent");
                });

            modelBuilder.Entity("Pidp.Models.JusticeSectorDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("JusticeSectorCode")
                        .HasColumnType("integer");

                    b.Property<string>("JustinUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrgainizationDetailId")
                        .HasColumnType("integer");

                    b.Property<string>("ParticipantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("JusticeSectorCode");

                    b.HasIndex("OrgainizationDetailId");

                    b.ToTable("JusticeSectorDetail");
                });

            modelBuilder.Entity("Pidp.Models.Lookups.AccessType", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("AccessTypeLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Special Authority eForms"
                        },
                        new
                        {
                            Code = 2,
                            Name = "HCIMWeb Account Transfer"
                        },
                        new
                        {
                            Code = 3,
                            Name = "HCIMWeb Enrolment"
                        },
                        new
                        {
                            Code = 4,
                            Name = "Driver Medical Fitness"
                        },
                        new
                        {
                            Code = 5,
                            Name = "Digital Evidence Management"
                        },
                        new
                        {
                            Code = 6,
                            Name = "Digital Evidence Case Management"
                        },
                        new
                        {
                            Code = 9,
                            Name = "Fraser Health UCI"
                        },
                        new
                        {
                            Code = 10,
                            Name = "MS Teams for Clinical Use"
                        },
                        new
                        {
                            Code = 7,
                            Name = "Digital Evidence Disclosure"
                        },
                        new
                        {
                            Code = 8,
                            Name = "Digital Evidence Defence"
                        });
                });

            modelBuilder.Entity("Pidp.Models.Lookups.College", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("CollegeLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Acronym = "CPSBC",
                            Name = "College of Physicians and Surgeons of BC"
                        },
                        new
                        {
                            Code = 2,
                            Acronym = "CPBC",
                            Name = "College of Pharmacists of BC"
                        },
                        new
                        {
                            Code = 3,
                            Acronym = "BCCNM",
                            Name = "BC College of Nurses and Midwives"
                        },
                        new
                        {
                            Code = 4,
                            Acronym = "CNPBC",
                            Name = "College of Naturopathic Physicians of BC"
                        },
                        new
                        {
                            Code = 5,
                            Acronym = "CDSBC",
                            Name = "College of Dental Surgeons of British Columbia"
                        },
                        new
                        {
                            Code = 6,
                            Acronym = "COBC",
                            Name = "College of Optometrists of British Columbia"
                        });
                });

            modelBuilder.Entity("Pidp.Models.Lookups.CorrectionService", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("CorrectionServiceLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "In Custody"
                        },
                        new
                        {
                            Code = 2,
                            Name = "Out Of Custody"
                        },
                        new
                        {
                            Code = 3,
                            Name = "In and Out Of Custody"
                        });
                });

            modelBuilder.Entity("Pidp.Models.Lookups.Country", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("CountryLookup");

                    b.HasData(
                        new
                        {
                            Code = "CA",
                            Name = "Canada"
                        },
                        new
                        {
                            Code = "US",
                            Name = "United States"
                        });
                });

            modelBuilder.Entity("Pidp.Models.Lookups.CourtLocation", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Staffed")
                        .HasColumnType("boolean");

                    b.HasKey("Code");

                    b.ToTable("CourtLocation");

                    b.HasData(
                        new
                        {
                            Code = "5871",
                            Active = true,
                            Name = "100 Mile House Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "3561",
                            Active = true,
                            Name = "Abbotsford Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "ADJU",
                            Active = true,
                            Name = "Adjudicator Listing",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5671",
                            Active = true,
                            Name = "Alexis Creek Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5681",
                            Active = true,
                            Name = "Anahim Lake Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "ACNW",
                            Active = true,
                            Name = "Anvil Centre",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4671",
                            Active = true,
                            Name = "Ashcroft Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5691",
                            Active = true,
                            Name = "Atlin Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "COA",
                            Active = true,
                            Name = "BC Court of Appeal",
                            Staffed = true
                        },
                        new
                        {
                            Code = "2007",
                            Active = true,
                            Name = "Bella Bella Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "2008",
                            Active = true,
                            Name = "Bella Coola Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "3511",
                            Active = true,
                            Name = "Burnaby Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5701",
                            Active = true,
                            Name = "Burns Lake Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1031",
                            Active = true,
                            Name = "Campbell River Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4681",
                            Active = true,
                            Name = "Castlegar Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4691",
                            Active = true,
                            Name = "Chase Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5721",
                            Active = true,
                            Name = "Chetwynd Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "CCC",
                            Active = true,
                            Name = "Chilliwack Cultural Centre",
                            Staffed = true
                        },
                        new
                        {
                            Code = "3521",
                            Active = true,
                            Name = "Chilliwack Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4701",
                            Active = true,
                            Name = "Clearwater Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "CKH",
                            Active = true,
                            Name = "Coast Kamloops Hotel and Conference Centre",
                            Staffed = true
                        },
                        new
                        {
                            Code = "CAKA",
                            Active = true,
                            Name = "Court of Appeal of BC - Kamloops",
                            Staffed = true
                        },
                        new
                        {
                            Code = "CAKE",
                            Active = true,
                            Name = "Court of Appeal of BC - Kelowna",
                            Staffed = true
                        },
                        new
                        {
                            Code = "CAVA",
                            Active = true,
                            Name = "Court of Appeal of BC - Vancouver",
                            Staffed = true
                        },
                        new
                        {
                            Code = "CAVI",
                            Active = true,
                            Name = "Court of Appeal of BC - Victoria",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1041",
                            Active = true,
                            Name = "Courtenay Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "CVCC",
                            Active = true,
                            Name = "Cowichan Community Centre",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4711",
                            Active = true,
                            Name = "Cranbrook Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4721",
                            Active = true,
                            Name = "Creston Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5911",
                            Active = true,
                            Name = "Daajing Giids Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5731",
                            Active = true,
                            Name = "Dawson Creek Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5741",
                            Active = true,
                            Name = "Dease Lake Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "3535",
                            Active = true,
                            Name = "Delta Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "2042",
                            Active = true,
                            Name = "Downtown Community Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1051",
                            Active = true,
                            Name = "Duncan Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "ESCC",
                            Active = true,
                            Name = "Erwin Stege Community Centre",
                            Staffed = true
                        },
                        new
                        {
                            Code = "EHC",
                            Active = true,
                            Name = "Evergreen Hall",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4731",
                            Active = true,
                            Name = "Fernie Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5751",
                            Active = true,
                            Name = "Fort Nelson Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5761",
                            Active = true,
                            Name = "Fort St James Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5771",
                            Active = true,
                            Name = "Fort St John Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5781",
                            Active = true,
                            Name = "Fraser Lake Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1061",
                            Active = true,
                            Name = "Ganges Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1071",
                            Active = true,
                            Name = "Gold River Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4741",
                            Active = true,
                            Name = "Golden Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5711",
                            Active = true,
                            Name = "Good Hope Lake Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4751",
                            Active = true,
                            Name = "Grand Forks Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5861",
                            Active = true,
                            Name = "Hazelton Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "3541",
                            Active = true,
                            Name = "Hope Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5791",
                            Active = true,
                            Name = "Houston Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5801",
                            Active = true,
                            Name = "Hudson's Hope Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "ITQ",
                            Active = true,
                            Name = "Inn at the Quay",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4771",
                            Active = true,
                            Name = "Invermere Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "2041",
                            Active = true,
                            Name = "Justice Centre (Judicial)",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4781",
                            Active = true,
                            Name = "Kamloops Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4801",
                            Active = true,
                            Name = "Kelowna Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4811",
                            Active = true,
                            Name = "Kimberley Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5811",
                            Active = true,
                            Name = "Kitimat Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "KSS",
                            Active = true,
                            Name = "Kitsilano Secondary School",
                            Staffed = true
                        },
                        new
                        {
                            Code = "KPAC",
                            Active = true,
                            Name = "Kiwanis Performing Arts Centre (Dawson Creek)",
                            Staffed = true
                        },
                        new
                        {
                            Code = "2009",
                            Active = true,
                            Name = "Klemtu Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5775",
                            Active = true,
                            Name = "Kwadacha Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "KPU",
                            Active = true,
                            Name = "Kwantlen Polytechnic University",
                            Staffed = true
                        },
                        new
                        {
                            Code = "3545",
                            Active = true,
                            Name = "Langley Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "LDRC",
                            Active = true,
                            Name = "Lillooet District Recreational Centre",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4821",
                            Active = true,
                            Name = "Lillooet Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5821",
                            Active = true,
                            Name = "Lower Post Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4831",
                            Active = true,
                            Name = "Lytton Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5831",
                            Active = true,
                            Name = "Mackenzie Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "3551",
                            Active = true,
                            Name = "Maple Ridge Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5841",
                            Active = true,
                            Name = "Masset Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5845",
                            Active = true,
                            Name = "McBride Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "MCC",
                            Active = true,
                            Name = "Merritt Civic Centre",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4851",
                            Active = true,
                            Name = "Merritt Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "3571",
                            Active = true,
                            Name = "Mission Provincial Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4861",
                            Active = true,
                            Name = "Nakusp Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "NDSC",
                            Active = true,
                            Name = "Nakusp and District Sports Complex",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1091",
                            Active = true,
                            Name = "Nanaimo Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "NCT",
                            Active = true,
                            Name = "Nelson Capitol Theatre",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4871",
                            Active = true,
                            Name = "Nelson Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5851",
                            Active = true,
                            Name = "New Aiyansh Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "3581",
                            Active = true,
                            Name = "New Westminster Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "2011",
                            Active = true,
                            Name = "North Vancouver Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4881",
                            Active = true,
                            Name = "Oliver Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1111",
                            Active = true,
                            Name = "Parksville Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "2021",
                            Active = true,
                            Name = "Pemberton Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4891",
                            Active = true,
                            Name = "Penticton Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "PSC",
                            Active = true,
                            Name = "Penticton Seniors Centre",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1121",
                            Active = true,
                            Name = "Port Alberni Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "3531",
                            Active = true,
                            Name = "Port Coquitlam Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1141",
                            Active = true,
                            Name = "Port Hardy Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1145",
                            Active = true,
                            Name = "Powell River Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5891",
                            Active = true,
                            Name = "Prince George Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5901",
                            Active = true,
                            Name = "Prince Rupert Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4901",
                            Active = true,
                            Name = "Princeton Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5921",
                            Active = true,
                            Name = "Quesnel Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4911",
                            Active = true,
                            Name = "Revelstoke Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "2025",
                            Active = true,
                            Name = "Richmond Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "RSS",
                            Active = true,
                            Name = "Riverside Secondary School",
                            Staffed = true
                        },
                        new
                        {
                            Code = "2045",
                            Active = true,
                            Name = "Robson Square Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4921",
                            Active = true,
                            Name = "Rossland Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4941",
                            Active = true,
                            Name = "Salmon Arm Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "2031",
                            Active = true,
                            Name = "Sechelt Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4899",
                            Active = true,
                            Name = "Sheriffs Escort Centre",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SLG",
                            Active = true,
                            Name = "Si'em' Lelum Gymnasium",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1151",
                            Active = true,
                            Name = "Sidney Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5931",
                            Active = true,
                            Name = "Smithers Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4951",
                            Active = true,
                            Name = "Sparwood Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "2035",
                            Active = true,
                            Name = "Squamish Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5941",
                            Active = true,
                            Name = "Stewart Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCCR",
                            Active = true,
                            Name = "Supreme Court Scheduling - Campbell River",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCCH",
                            Active = true,
                            Name = "Supreme Court Scheduling - Chilliwack",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCCO",
                            Active = true,
                            Name = "Supreme Court Scheduling - Courtenay",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCCB",
                            Active = true,
                            Name = "Supreme Court Scheduling - Cranbrook",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCCS",
                            Active = true,
                            Name = "Supreme Court Scheduling - Creston",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCDC",
                            Active = true,
                            Name = "Supreme Court Scheduling - Dawson Creek",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCDU",
                            Active = true,
                            Name = "Supreme Court Scheduling - Duncan",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCFN",
                            Active = true,
                            Name = "Supreme Court Scheduling - Fort Nelson",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCFJ",
                            Active = true,
                            Name = "Supreme Court Scheduling - Fort St. John",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCGD",
                            Active = true,
                            Name = "Supreme Court Scheduling - Golden",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCIN",
                            Active = true,
                            Name = "Supreme Court Scheduling - Invermere",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCKA",
                            Active = true,
                            Name = "Supreme Court Scheduling - Kamloops",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCKE",
                            Active = true,
                            Name = "Supreme Court Scheduling - Kelowna",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCMA",
                            Active = true,
                            Name = "Supreme Court Scheduling - Massett",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCNA",
                            Active = true,
                            Name = "Supreme Court Scheduling - Nanaimo",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCNE",
                            Active = true,
                            Name = "Supreme Court Scheduling - Nelson",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCNW",
                            Active = true,
                            Name = "Supreme Court Scheduling - New Westminster",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCPE",
                            Active = true,
                            Name = "Supreme Court Scheduling - Penticton",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCPA",
                            Active = true,
                            Name = "Supreme Court Scheduling - Port Alberni",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCPR",
                            Active = true,
                            Name = "Supreme Court Scheduling - Powell River",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCPG",
                            Active = true,
                            Name = "Supreme Court Scheduling - Prince George",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCRP",
                            Active = true,
                            Name = "Supreme Court Scheduling - Prince Rupert",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCQU",
                            Active = true,
                            Name = "Supreme Court Scheduling - Quesnel",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCRE",
                            Active = true,
                            Name = "Supreme Court Scheduling - Revelstoke",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCRO",
                            Active = true,
                            Name = "Supreme Court Scheduling - Rossland",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCSA",
                            Active = true,
                            Name = "Supreme Court Scheduling - Salmon Arm",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCSM",
                            Active = true,
                            Name = "Supreme Court Scheduling - Smithers",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCTE",
                            Active = true,
                            Name = "Supreme Court Scheduling - Terrace",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCVA",
                            Active = true,
                            Name = "Supreme Court Scheduling - Vancouver",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCVE",
                            Active = true,
                            Name = "Supreme Court Scheduling - Vernon",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCVI",
                            Active = true,
                            Name = "Supreme Court Scheduling - Victoria",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SCWL",
                            Active = true,
                            Name = "Supreme Court Scheduling - Williams Lake",
                            Staffed = true
                        },
                        new
                        {
                            Code = "3588",
                            Active = true,
                            Name = "Surrey First Nations Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "3585",
                            Active = true,
                            Name = "Surrey Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "3587",
                            Active = true,
                            Name = "Surrey Provincial Weekend - Admin Department",
                            Staffed = true
                        },
                        new
                        {
                            Code = "SSS",
                            Active = true,
                            Name = "Sutherland Secondary School",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1171",
                            Active = true,
                            Name = "Tahsis Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5951",
                            Active = true,
                            Name = "Terrace Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "TSP",
                            Active = true,
                            Name = "Terrace Sportsplex",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1181",
                            Active = true,
                            Name = "Tofino Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5805",
                            Active = true,
                            Name = "Tsay Keh Dene Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5955",
                            Active = true,
                            Name = "Tumbler Ridge Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1191",
                            Active = true,
                            Name = "Ucluelet Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "UFV",
                            Active = true,
                            Name = "University of Fraser Valley",
                            Staffed = true
                        },
                        new
                        {
                            Code = "UVIC",
                            Active = true,
                            Name = "University of Victoria",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5959",
                            Active = true,
                            Name = "Valemount Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "VAJA",
                            Active = true,
                            Name = "Vancouver Jail - Alternate Fax Number",
                            Staffed = true
                        },
                        new
                        {
                            Code = "6011",
                            Active = true,
                            Name = "Vancouver Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "2040",
                            Active = true,
                            Name = "Vancouver Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "204B",
                            Active = true,
                            Name = "Vancouver Provincial Court - ALTERNATE After Hours Fax Number",
                            Staffed = true
                        },
                        new
                        {
                            Code = "204A",
                            Active = true,
                            Name = "Vancouver Provincial Court - After Hours/Justice Centre Only",
                            Staffed = true
                        },
                        new
                        {
                            Code = "VT",
                            Active = true,
                            Name = "Vancouver Training",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5961",
                            Active = true,
                            Name = "Vanderhoof Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "4971",
                            Active = true,
                            Name = "Vernon Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "VICA",
                            Active = true,
                            Name = "Victoria - Accounting Section",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1201",
                            Active = true,
                            Name = "Victoria Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "2049",
                            Active = true,
                            Name = "Violation Ticket Centre",
                            Staffed = true
                        },
                        new
                        {
                            Code = "2051",
                            Active = true,
                            Name = "West Vancouver Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "1211",
                            Active = true,
                            Name = "Western Communities Provincial Court",
                            Staffed = true
                        },
                        new
                        {
                            Code = "WLEH",
                            Active = true,
                            Name = "Williams Lake Elks Hall",
                            Staffed = true
                        },
                        new
                        {
                            Code = "5971",
                            Active = true,
                            Name = "Williams Lake Law Courts",
                            Staffed = true
                        },
                        new
                        {
                            Code = "WLMH",
                            Active = true,
                            Name = "Williams Lake MacKinnon Hall",
                            Staffed = true
                        });
                });

            modelBuilder.Entity("Pidp.Models.Lookups.CourtSubLocation", b =>
                {
                    b.Property<int>("CourtSubLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CourtSubLocationId"));

                    b.Property<string>("CourtLocationCode")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CourtSubLocationId");

                    b.HasIndex("CourtLocationCode");

                    b.ToTable("CourtSubLocation");
                });

            modelBuilder.Entity("Pidp.Models.Lookups.CrownRegion", b =>
                {
                    b.Property<string>("AgencyCode")
                        .HasColumnType("text");

                    b.Property<string>("CrownLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RegionId")
                        .HasColumnType("integer");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AgencyCode");

                    b.ToTable("CrownRegionLookup");

                    b.HasData(
                        new
                        {
                            AgencyCode = "C109",
                            CrownLocation = "Campbell River Crown Counsel",
                            RegionId = 1,
                            RegionName = "Vancouver Island Region"
                        },
                        new
                        {
                            AgencyCode = "C104",
                            CrownLocation = "Courtenay Crown Counsel",
                            RegionId = 1,
                            RegionName = "Vancouver Island Region"
                        },
                        new
                        {
                            AgencyCode = "C106",
                            CrownLocation = "Duncan Crown Counsel",
                            RegionId = 1,
                            RegionName = "Vancouver Island Region"
                        },
                        new
                        {
                            AgencyCode = "C105",
                            CrownLocation = "Nanaimo Crown Counsel",
                            RegionId = 1,
                            RegionName = "Vancouver Island Region"
                        },
                        new
                        {
                            AgencyCode = "C107",
                            CrownLocation = "Parksville (do not use) Crown Counsel",
                            RegionId = 1,
                            RegionName = "Vancouver Island Region"
                        },
                        new
                        {
                            AgencyCode = "C108",
                            CrownLocation = "Port Alberni Crown Counsel",
                            RegionId = 1,
                            RegionName = "Vancouver Island Region"
                        },
                        new
                        {
                            AgencyCode = "C604",
                            CrownLocation = "Port Hardy Crown Counsel",
                            RegionId = 1,
                            RegionName = "Vancouver Island Region"
                        },
                        new
                        {
                            AgencyCode = "C110",
                            CrownLocation = "Powell River Crown Counsel",
                            RegionId = 1,
                            RegionName = "Vancouver Island Region"
                        },
                        new
                        {
                            AgencyCode = "C111",
                            CrownLocation = "Sidney Crown Counsel",
                            RegionId = 1,
                            RegionName = "Vancouver Island Region"
                        },
                        new
                        {
                            AgencyCode = "C101",
                            CrownLocation = "Victoria Regional Crown Counsel",
                            RegionId = 1,
                            RegionName = "Vancouver Island Region"
                        },
                        new
                        {
                            AgencyCode = "C102",
                            CrownLocation = "Victoria Youth Crown Counsel",
                            RegionId = 1,
                            RegionName = "Vancouver Island Region"
                        },
                        new
                        {
                            AgencyCode = "C103",
                            CrownLocation = "Western Communities Crown Counsel",
                            RegionId = 1,
                            RegionName = "Vancouver Island Region"
                        },
                        new
                        {
                            AgencyCode = "BBCR",
                            CrownLocation = "Bella Bella Provincial Crown Counsel",
                            RegionId = 2,
                            RegionName = "Vancouver Region"
                        },
                        new
                        {
                            AgencyCode = "BCCR",
                            CrownLocation = "Bella Coola Provincial Crown Counsel",
                            RegionId = 2,
                            RegionName = "Vancouver Region"
                        },
                        new
                        {
                            AgencyCode = "C303",
                            CrownLocation = "Burnaby Crown Counsel",
                            RegionId = 2,
                            RegionName = "Vancouver Region"
                        },
                        new
                        {
                            AgencyCode = "889",
                            CrownLocation = "Downtown Community Crown (Prov)",
                            RegionId = 2,
                            RegionName = "Vancouver Region"
                        },
                        new
                        {
                            AgencyCode = "KLCR",
                            CrownLocation = "Klemtu Provincial Crown Counsel",
                            RegionId = 2,
                            RegionName = "Vancouver Region"
                        },
                        new
                        {
                            AgencyCode = "C205",
                            CrownLocation = "North Vancouver Crown Counsel",
                            RegionId = 2,
                            RegionName = "Vancouver Region"
                        },
                        new
                        {
                            AgencyCode = "PEMB",
                            CrownLocation = "Pemberton Crown Counsel",
                            RegionId = 2,
                            RegionName = "Vancouver Region"
                        },
                        new
                        {
                            AgencyCode = "C207",
                            CrownLocation = "Richmond Crown Counsel",
                            RegionId = 2,
                            RegionName = "Vancouver Region"
                        },
                        new
                        {
                            AgencyCode = "C208",
                            CrownLocation = "Sechelt Crown Counsel",
                            RegionId = 2,
                            RegionName = "Vancouver Region"
                        },
                        new
                        {
                            AgencyCode = "C209",
                            CrownLocation = "Squamish Crown Counsel",
                            RegionId = 2,
                            RegionName = "Vancouver Region"
                        },
                        new
                        {
                            AgencyCode = "205",
                            CrownLocation = "Vancouver Provincial Crown Counsel",
                            RegionId = 2,
                            RegionName = "Vancouver Region"
                        },
                        new
                        {
                            AgencyCode = "C201",
                            CrownLocation = "Vancouver Regional Crown Counsel",
                            RegionId = 2,
                            RegionName = "Vancouver Region"
                        },
                        new
                        {
                            AgencyCode = "C203",
                            CrownLocation = "Vancouver Traffic Crown Counsel",
                            RegionId = 2,
                            RegionName = "Vancouver Region"
                        },
                        new
                        {
                            AgencyCode = "C204",
                            CrownLocation = "Vancouver Youth Crown Counsel",
                            RegionId = 2,
                            RegionName = "Vancouver Region"
                        },
                        new
                        {
                            AgencyCode = "C206",
                            CrownLocation = "West Vancouver Crown Counsel",
                            RegionId = 2,
                            RegionName = "Vancouver Region"
                        },
                        new
                        {
                            AgencyCode = "C305",
                            CrownLocation = "Abbotsford Crown Counsel",
                            RegionId = 3,
                            RegionName = "Fraser Region"
                        },
                        new
                        {
                            AgencyCode = "C304",
                            CrownLocation = "Chilliwack Crown Counsel",
                            RegionId = 3,
                            RegionName = "Fraser Region"
                        },
                        new
                        {
                            AgencyCode = "C306",
                            CrownLocation = "Delta (Do Not Use) Crown Counsel",
                            RegionId = 3,
                            RegionName = "Fraser Region"
                        },
                        new
                        {
                            AgencyCode = "C307",
                            CrownLocation = "Hope Crown Counsel",
                            RegionId = 3,
                            RegionName = "Fraser Region"
                        },
                        new
                        {
                            AgencyCode = "C308",
                            CrownLocation = "Langley (Do Not Use) Crown Counsel",
                            RegionId = 3,
                            RegionName = "Fraser Region"
                        },
                        new
                        {
                            AgencyCode = "C309",
                            CrownLocation = "Maple Ridge Crown Counsel",
                            RegionId = 3,
                            RegionName = "Fraser Region"
                        },
                        new
                        {
                            AgencyCode = "C302",
                            CrownLocation = "New Westminster Provincial Crown",
                            RegionId = 3,
                            RegionName = "Fraser Region"
                        },
                        new
                        {
                            AgencyCode = "C301",
                            CrownLocation = "New Westminster Regional Crown",
                            RegionId = 3,
                            RegionName = "Fraser Region"
                        },
                        new
                        {
                            AgencyCode = "C310",
                            CrownLocation = "Port Coquitlam Crown Counsel",
                            RegionId = 3,
                            RegionName = "Fraser Region"
                        },
                        new
                        {
                            AgencyCode = "C311",
                            CrownLocation = "Surrey Crown Counsel",
                            RegionId = 3,
                            RegionName = "Fraser Region"
                        },
                        new
                        {
                            AgencyCode = "C405",
                            CrownLocation = "Cranbrook Crown Counsel",
                            RegionId = 4,
                            RegionName = "Interior Region"
                        },
                        new
                        {
                            AgencyCode = "C401",
                            CrownLocation = "Kamloops Crown Counsel",
                            RegionId = 4,
                            RegionName = "Interior Region"
                        },
                        new
                        {
                            AgencyCode = "kelo",
                            CrownLocation = "Kelowna Crown Counsel",
                            RegionId = 4,
                            RegionName = "Interior Region"
                        },
                        new
                        {
                            AgencyCode = "C406",
                            CrownLocation = "Nelson Crown Counsel",
                            RegionId = 4,
                            RegionName = "Interior Region"
                        },
                        new
                        {
                            AgencyCode = "C403",
                            CrownLocation = "Penticton Crown Counsel",
                            RegionId = 4,
                            RegionName = "Interior Region"
                        },
                        new
                        {
                            AgencyCode = "SACC",
                            CrownLocation = "Salmon Arm Crown Counsel",
                            RegionId = 4,
                            RegionName = "Interior Region"
                        },
                        new
                        {
                            AgencyCode = "C404",
                            CrownLocation = "Vernon Crown Counsel",
                            RegionId = 4,
                            RegionName = "Interior Region"
                        },
                        new
                        {
                            AgencyCode = "HUNM",
                            CrownLocation = "100 Mile House Crown Counsel",
                            RegionId = 5,
                            RegionName = "Northern Region"
                        },
                        new
                        {
                            AgencyCode = "C502",
                            CrownLocation = "Dawson Creek Crown Counsel",
                            RegionId = 5,
                            RegionName = "Northern Region"
                        },
                        new
                        {
                            AgencyCode = "FNEL",
                            CrownLocation = "Fort Nelson Crown Counsel",
                            RegionId = 5,
                            RegionName = "Northern Region"
                        },
                        new
                        {
                            AgencyCode = "C503",
                            CrownLocation = "Fort St John Crown Counsel",
                            RegionId = 5,
                            RegionName = "Northern Region"
                        },
                        new
                        {
                            AgencyCode = "C501",
                            CrownLocation = "Prince George Crown Counsel",
                            RegionId = 5,
                            RegionName = "Northern Region"
                        },
                        new
                        {
                            AgencyCode = "C504",
                            CrownLocation = "Prince Rupert Crown Counsel",
                            RegionId = 5,
                            RegionName = "Northern Region"
                        },
                        new
                        {
                            AgencyCode = "C505",
                            CrownLocation = "Quesnel Crown Counsel",
                            RegionId = 5,
                            RegionName = "Northern Region"
                        },
                        new
                        {
                            AgencyCode = "C506",
                            CrownLocation = "Smithers Crown Counsel",
                            RegionId = 5,
                            RegionName = "Northern Region"
                        },
                        new
                        {
                            AgencyCode = "C507",
                            CrownLocation = "Terrace Crown Counsel",
                            RegionId = 5,
                            RegionName = "Northern Region"
                        },
                        new
                        {
                            AgencyCode = "C508",
                            CrownLocation = "Vanderhoof Crown Counsel",
                            RegionId = 5,
                            RegionName = "Northern Region"
                        },
                        new
                        {
                            AgencyCode = "C509",
                            CrownLocation = "Williams Lake Crown Counsel",
                            RegionId = 5,
                            RegionName = "Northern Region"
                        },
                        new
                        {
                            AgencyCode = "ATT",
                            CrownLocation = "Auto Theft Task Force Crown Counsel",
                            RegionId = 6,
                            RegionName = "CASP"
                        },
                        new
                        {
                            AgencyCode = "C602",
                            CrownLocation = "CJB Headquarters - Vancouver",
                            RegionId = 6,
                            RegionName = "CASP"
                        },
                        new
                        {
                            AgencyCode = "C601",
                            CrownLocation = "CJB Headquarters - Victoria",
                            RegionId = 6,
                            RegionName = "CASP"
                        },
                        new
                        {
                            AgencyCode = "C603",
                            CrownLocation = "CJB Special Prosecutions",
                            RegionId = 6,
                            RegionName = "CASP"
                        },
                        new
                        {
                            AgencyCode = "CCA5",
                            CrownLocation = "Centralized Charge Assessment Pilot - Region 5",
                            RegionId = 5,
                            RegionName = "Northern Region"
                        },
                        new
                        {
                            AgencyCode = "6013",
                            CrownLocation = "Commercial Crime Crown Counsel",
                            RegionId = 6,
                            RegionName = "CASP"
                        },
                        new
                        {
                            AgencyCode = "CJHQ",
                            CrownLocation = "Criminal Justice Headquarters - RM",
                            RegionId = 6,
                            RegionName = "CASP"
                        },
                        new
                        {
                            AgencyCode = "HEF",
                            CrownLocation = "Health Fraud Crown Counsel",
                            RegionId = 6,
                            RegionName = "CASP"
                        },
                        new
                        {
                            AgencyCode = "ICF",
                            CrownLocation = "ICBC Fraud Crown Counsel",
                            RegionId = 6,
                            RegionName = "CASP"
                        },
                        new
                        {
                            AgencyCode = "PRC",
                            CrownLocation = "Proceeds of Crime Crown Counsel",
                            RegionId = 0,
                            RegionName = "CASP"
                        },
                        new
                        {
                            AgencyCode = "WEF",
                            CrownLocation = "Welfare Fraud Crown Counsel",
                            RegionId = 6,
                            RegionName = "CASP"
                        },
                        new
                        {
                            AgencyCode = "WOC",
                            CrownLocation = "Workers Compensation Crown Counsel",
                            RegionId = 6,
                            RegionName = "CASP"
                        });
                });

            modelBuilder.Entity("Pidp.Models.Lookups.HealthAuthority", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("HealthAuthorityLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Provincial Health Services Authority"
                        },
                        new
                        {
                            Code = 2,
                            Name = "Vancouver Island Health Authority"
                        },
                        new
                        {
                            Code = 3,
                            Name = "Vancouver Coastal Health Authority"
                        },
                        new
                        {
                            Code = 4,
                            Name = "Fraser Health Authority"
                        },
                        new
                        {
                            Code = 5,
                            Name = "Interior Health Authority"
                        },
                        new
                        {
                            Code = 6,
                            Name = "Northern Health Authority"
                        },
                        new
                        {
                            Code = 7,
                            Name = "First Nations Health Authority"
                        });
                });

            modelBuilder.Entity("Pidp.Models.Lookups.JusticeSector", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("JusticeSectorLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "BC Prosecution Service"
                        },
                        new
                        {
                            Code = 2,
                            Name = "Road Safety BC"
                        });
                });

            modelBuilder.Entity("Pidp.Models.Lookups.LawEnforcement", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("LawEnforcementLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Royal Canadian Mounted Police"
                        },
                        new
                        {
                            Code = 2,
                            Name = "Victoria Police Department"
                        },
                        new
                        {
                            Code = 3,
                            Name = "Sannich Police Department"
                        },
                        new
                        {
                            Code = 4,
                            Name = "Delta Police Departmemt"
                        });
                });

            modelBuilder.Entity("Pidp.Models.Lookups.LawSociety", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("LawSocietyLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "BC Law Society"
                        });
                });

            modelBuilder.Entity("Pidp.Models.Lookups.Organization", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("IdpHint")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.HasIndex("IdpHint")
                        .IsUnique();

                    b.ToTable("OrganizationLookup");
                });

            modelBuilder.Entity("Pidp.Models.Lookups.Province", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("ProvinceLookup");

                    b.HasData(
                        new
                        {
                            Code = "AB",
                            CountryCode = "CA",
                            Name = "Alberta"
                        },
                        new
                        {
                            Code = "BC",
                            CountryCode = "CA",
                            Name = "British Columbia"
                        },
                        new
                        {
                            Code = "MB",
                            CountryCode = "CA",
                            Name = "Manitoba"
                        },
                        new
                        {
                            Code = "NB",
                            CountryCode = "CA",
                            Name = "New Brunswick"
                        },
                        new
                        {
                            Code = "NL",
                            CountryCode = "CA",
                            Name = "Newfoundland and Labrador"
                        },
                        new
                        {
                            Code = "NS",
                            CountryCode = "CA",
                            Name = "Nova Scotia"
                        },
                        new
                        {
                            Code = "ON",
                            CountryCode = "CA",
                            Name = "Ontario"
                        },
                        new
                        {
                            Code = "PE",
                            CountryCode = "CA",
                            Name = "Prince Edward Island"
                        },
                        new
                        {
                            Code = "QC",
                            CountryCode = "CA",
                            Name = "Quebec"
                        },
                        new
                        {
                            Code = "SK",
                            CountryCode = "CA",
                            Name = "Saskatchewan"
                        },
                        new
                        {
                            Code = "NT",
                            CountryCode = "CA",
                            Name = "Northwest Territories"
                        },
                        new
                        {
                            Code = "NU",
                            CountryCode = "CA",
                            Name = "Nunavut"
                        },
                        new
                        {
                            Code = "YT",
                            CountryCode = "CA",
                            Name = "Yukon"
                        },
                        new
                        {
                            Code = "AL",
                            CountryCode = "US",
                            Name = "Alabama"
                        },
                        new
                        {
                            Code = "AK",
                            CountryCode = "US",
                            Name = "Alaska"
                        },
                        new
                        {
                            Code = "AS",
                            CountryCode = "US",
                            Name = "American Samoa"
                        },
                        new
                        {
                            Code = "AZ",
                            CountryCode = "US",
                            Name = "Arizona"
                        },
                        new
                        {
                            Code = "AR",
                            CountryCode = "US",
                            Name = "Arkansas"
                        },
                        new
                        {
                            Code = "CA",
                            CountryCode = "US",
                            Name = "California"
                        },
                        new
                        {
                            Code = "CO",
                            CountryCode = "US",
                            Name = "Colorado"
                        },
                        new
                        {
                            Code = "CT",
                            CountryCode = "US",
                            Name = "Connecticut"
                        },
                        new
                        {
                            Code = "DE",
                            CountryCode = "US",
                            Name = "Delaware"
                        },
                        new
                        {
                            Code = "DC",
                            CountryCode = "US",
                            Name = "District of Columbia"
                        },
                        new
                        {
                            Code = "FL",
                            CountryCode = "US",
                            Name = "Florida"
                        },
                        new
                        {
                            Code = "GA",
                            CountryCode = "US",
                            Name = "Georgia"
                        },
                        new
                        {
                            Code = "GU",
                            CountryCode = "US",
                            Name = "Guam"
                        },
                        new
                        {
                            Code = "HI",
                            CountryCode = "US",
                            Name = "Hawaii"
                        },
                        new
                        {
                            Code = "ID",
                            CountryCode = "US",
                            Name = "Idaho"
                        },
                        new
                        {
                            Code = "IL",
                            CountryCode = "US",
                            Name = "Illinois"
                        },
                        new
                        {
                            Code = "IN",
                            CountryCode = "US",
                            Name = "Indiana"
                        },
                        new
                        {
                            Code = "IA",
                            CountryCode = "US",
                            Name = "Iowa"
                        },
                        new
                        {
                            Code = "KS",
                            CountryCode = "US",
                            Name = "Kansas"
                        },
                        new
                        {
                            Code = "KY",
                            CountryCode = "US",
                            Name = "Kentucky"
                        },
                        new
                        {
                            Code = "LA",
                            CountryCode = "US",
                            Name = "Louisiana"
                        },
                        new
                        {
                            Code = "ME",
                            CountryCode = "US",
                            Name = "Maine"
                        },
                        new
                        {
                            Code = "MD",
                            CountryCode = "US",
                            Name = "Maryland"
                        },
                        new
                        {
                            Code = "MA",
                            CountryCode = "US",
                            Name = "Massachusetts"
                        },
                        new
                        {
                            Code = "MI",
                            CountryCode = "US",
                            Name = "Michigan"
                        },
                        new
                        {
                            Code = "MN",
                            CountryCode = "US",
                            Name = "Minnesota"
                        },
                        new
                        {
                            Code = "MS",
                            CountryCode = "US",
                            Name = "Mississippi"
                        },
                        new
                        {
                            Code = "MO",
                            CountryCode = "US",
                            Name = "Missouri"
                        },
                        new
                        {
                            Code = "MT",
                            CountryCode = "US",
                            Name = "Montana"
                        },
                        new
                        {
                            Code = "NE",
                            CountryCode = "US",
                            Name = "Nebraska"
                        },
                        new
                        {
                            Code = "NV",
                            CountryCode = "US",
                            Name = "Nevada"
                        },
                        new
                        {
                            Code = "NH",
                            CountryCode = "US",
                            Name = "New Hampshire"
                        },
                        new
                        {
                            Code = "NJ",
                            CountryCode = "US",
                            Name = "New Jersey"
                        },
                        new
                        {
                            Code = "NM",
                            CountryCode = "US",
                            Name = "New Mexico"
                        },
                        new
                        {
                            Code = "NY",
                            CountryCode = "US",
                            Name = "New York"
                        },
                        new
                        {
                            Code = "NC",
                            CountryCode = "US",
                            Name = "North Carolina"
                        },
                        new
                        {
                            Code = "ND",
                            CountryCode = "US",
                            Name = "North Dakota"
                        },
                        new
                        {
                            Code = "MP",
                            CountryCode = "US",
                            Name = "Northern Mariana Islands"
                        },
                        new
                        {
                            Code = "OH",
                            CountryCode = "US",
                            Name = "Ohio"
                        },
                        new
                        {
                            Code = "OK",
                            CountryCode = "US",
                            Name = "Oklahoma"
                        },
                        new
                        {
                            Code = "OR",
                            CountryCode = "US",
                            Name = "Oregon"
                        },
                        new
                        {
                            Code = "PA",
                            CountryCode = "US",
                            Name = "Pennsylvania"
                        },
                        new
                        {
                            Code = "PR",
                            CountryCode = "US",
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Code = "RI",
                            CountryCode = "US",
                            Name = "Rhode Island"
                        },
                        new
                        {
                            Code = "SC",
                            CountryCode = "US",
                            Name = "South Carolina"
                        },
                        new
                        {
                            Code = "SD",
                            CountryCode = "US",
                            Name = "South Dakota"
                        },
                        new
                        {
                            Code = "TN",
                            CountryCode = "US",
                            Name = "Tennessee"
                        },
                        new
                        {
                            Code = "TX",
                            CountryCode = "US",
                            Name = "Texas"
                        },
                        new
                        {
                            Code = "UM",
                            CountryCode = "US",
                            Name = "United States Minor Outlying Islands"
                        },
                        new
                        {
                            Code = "UT",
                            CountryCode = "US",
                            Name = "Utah"
                        },
                        new
                        {
                            Code = "VT",
                            CountryCode = "US",
                            Name = "Vermont"
                        },
                        new
                        {
                            Code = "VI",
                            CountryCode = "US",
                            Name = "Virgin Islands, U.S."
                        },
                        new
                        {
                            Code = "VA",
                            CountryCode = "US",
                            Name = "Virginia"
                        },
                        new
                        {
                            Code = "WA",
                            CountryCode = "US",
                            Name = "Washington"
                        },
                        new
                        {
                            Code = "WV",
                            CountryCode = "US",
                            Name = "West Virginia"
                        },
                        new
                        {
                            Code = "WI",
                            CountryCode = "US",
                            Name = "Wisconsin"
                        },
                        new
                        {
                            Code = "WY",
                            CountryCode = "US",
                            Name = "Wyoming"
                        });
                });

            modelBuilder.Entity("Pidp.Models.Lookups.SubmittingAgency", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<Instant?>("ClientCertExpiry")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IdpHint")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("LevelOfAssurance")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("SubmittingAgencyLookup");

                    b.HasData(
                        new
                        {
                            Code = "216",
                            IdpHint = "",
                            Name = "100 Mile House RCMP"
                        },
                        new
                        {
                            Code = "408",
                            IdpHint = "",
                            Name = "Abbotsford Police Department"
                        },
                        new
                        {
                            Code = "703",
                            IdpHint = "",
                            Name = "Agassiz RCMP"
                        },
                        new
                        {
                            Code = "901",
                            IdpHint = "",
                            Name = "Alert Bay RCMP"
                        },
                        new
                        {
                            Code = "201",
                            IdpHint = "",
                            Name = "Alexis Creek RCMP"
                        },
                        new
                        {
                            Code = "202",
                            IdpHint = "",
                            Name = "Anahim Lake RCMP"
                        },
                        new
                        {
                            Code = "203",
                            IdpHint = "",
                            Name = "Ashcroft RCMP"
                        },
                        new
                        {
                            Code = "601",
                            IdpHint = "",
                            Name = "Atlin RCMP"
                        },
                        new
                        {
                            Code = "CITA",
                            IdpHint = "",
                            Name = "BCHP - Ashcroft - RCMP"
                        },
                        new
                        {
                            Code = "735",
                            IdpHint = "",
                            Name = "BCHP - Burnaby - RCMP"
                        },
                        new
                        {
                            Code = "IRSU",
                            IdpHint = "",
                            Name = "BCHP - CRD IRSU - RCMP"
                        },
                        new
                        {
                            Code = "NITS",
                            IdpHint = "",
                            Name = "BCHP - Campbell River - RCMP"
                        },
                        new
                        {
                            Code = "IRNA",
                            IdpHint = "",
                            Name = "BCHP - Central Island IRSU - RCMP"
                        },
                        new
                        {
                            Code = "SIHP",
                            IdpHint = "",
                            Name = "BCHP - Chemainus - RCMP"
                        },
                        new
                        {
                            Code = "SUHP",
                            IdpHint = "",
                            Name = "BCHP - Chilliwack - RCMP"
                        },
                        new
                        {
                            Code = "CITC",
                            IdpHint = "",
                            Name = "BCHP - Clearwater - RCMP"
                        },
                        new
                        {
                            Code = "RSEC",
                            IdpHint = "",
                            Name = "BCHP - Cranbrook - RCMP"
                        },
                        new
                        {
                            Code = "734",
                            IdpHint = "",
                            Name = "BCHP - Deas Island - RCMP"
                        },
                        new
                        {
                            Code = "NOTS",
                            IdpHint = "",
                            Name = "BCHP - Falkland - RCMP"
                        },
                        new
                        {
                            Code = "IRSL",
                            IdpHint = "",
                            Name = "BCHP - Fraser Coast IRSU - RCMP"
                        },
                        new
                        {
                            Code = "GOTS",
                            IdpHint = "",
                            Name = "BCHP - Golden - RCMP"
                        },
                        new
                        {
                            Code = "RKSO",
                            IdpHint = "",
                            Name = "BCHP - Kamloops - RCMP"
                        },
                        new
                        {
                            Code = "COTS",
                            IdpHint = "",
                            Name = "BCHP - Kelowna - RCMP"
                        },
                        new
                        {
                            Code = "SOHP",
                            IdpHint = "",
                            Name = "BCHP - Keremeos - RCMP"
                        },
                        new
                        {
                            Code = "CITM",
                            IdpHint = "",
                            Name = "BCHP - Merritt - RCMP"
                        },
                        new
                        {
                            Code = "RSEN",
                            IdpHint = "",
                            Name = "BCHP - Nelson - RCMP"
                        },
                        new
                        {
                            Code = "IRSW",
                            IdpHint = "",
                            Name = "BCHP - Nelson IRSU - RCMP"
                        },
                        new
                        {
                            Code = "IRNI",
                            IdpHint = "",
                            Name = "BCHP - North Island IRSU - RCMP"
                        },
                        new
                        {
                            Code = "CITS",
                            IdpHint = "",
                            Name = "BCHP - Parksville - RCMP"
                        },
                        new
                        {
                            Code = "RFFG",
                            IdpHint = "",
                            Name = "BCHP - Prince George - RCMP"
                        },
                        new
                        {
                            Code = "RTRF",
                            IdpHint = "",
                            Name = "BCHP - RCMP"
                        },
                        new
                        {
                            Code = "124A",
                            IdpHint = "",
                            Name = "BCHP - Revelstoke - RCMP"
                        },
                        new
                        {
                            Code = "BCHV",
                            IdpHint = "",
                            Name = "BCHP - VAN ISLAND - RCMP"
                        },
                        new
                        {
                            Code = "204",
                            IdpHint = "",
                            Name = "Barriere RCMP"
                        },
                        new
                        {
                            Code = "620",
                            IdpHint = "",
                            Name = "Bella Bella RCMP"
                        },
                        new
                        {
                            Code = "602",
                            IdpHint = "",
                            Name = "Bella Coola RCMP"
                        },
                        new
                        {
                            Code = "742",
                            IdpHint = "",
                            Name = "Bowen Island RCMP"
                        },
                        new
                        {
                            Code = "704",
                            IdpHint = "",
                            Name = "Burnaby RCMP"
                        },
                        new
                        {
                            Code = "704B",
                            IdpHint = "",
                            Name = "Burnaby RCMP - Bail Hearings"
                        },
                        new
                        {
                            Code = "7004",
                            IdpHint = "",
                            Name = "Burnaby RCMP- DNA"
                        },
                        new
                        {
                            Code = "501",
                            IdpHint = "",
                            Name = "Burns Lake RCMP"
                        },
                        new
                        {
                            Code = "CFKE",
                            IdpHint = "",
                            Name = "CFSEU Kelowna - RCMP"
                        },
                        new
                        {
                            Code = "IGTF",
                            IdpHint = "",
                            Name = "CFSEU LMD 6000 - RCMP"
                        },
                        new
                        {
                            Code = "CFPG",
                            IdpHint = "",
                            Name = "CFSEU Prince George - RCMP"
                        },
                        new
                        {
                            Code = "CFSE",
                            IdpHint = "",
                            Name = "CFSEU Vancouver - RCMP"
                        },
                        new
                        {
                            Code = "VOCA",
                            IdpHint = "",
                            Name = "CFSEU Victoria - RCMP"
                        },
                        new
                        {
                            Code = "903",
                            IdpHint = "",
                            Name = "Campbell River RCMP"
                        },
                        new
                        {
                            Code = "CBID",
                            IdpHint = "",
                            Name = "Canada Border Services Agency - Investigations Division"
                        },
                        new
                        {
                            Code = "CBIF",
                            IdpHint = "",
                            Name = "Canada Border Services Agency - Investigations Division - FingerprintingDivi"
                        },
                        new
                        {
                            Code = "CBSO",
                            IdpHint = "",
                            Name = "Canada Border Services Agency - Port of Osoyoos"
                        },
                        new
                        {
                            Code = "CFBE",
                            IdpHint = "",
                            Name = "Canadian Forces Branch - Military Police - Esquimalt"
                        },
                        new
                        {
                            Code = "CFMP",
                            IdpHint = "",
                            Name = "Canadian Forces Branch - Military Police Comox"
                        },
                        new
                        {
                            Code = "CFNP",
                            IdpHint = "",
                            Name = "Canadian Forces National Invest. Service - Pacific Region"
                        },
                        new
                        {
                            Code = "CNPC",
                            IdpHint = "",
                            Name = "Canadian National Police Services - Chilliwack"
                        },
                        new
                        {
                            Code = "CNKA",
                            IdpHint = "",
                            Name = "Canadian National Police Services - Kamloops"
                        },
                        new
                        {
                            Code = "CNNV",
                            IdpHint = "",
                            Name = "Canadian National Police Services - North Van"
                        },
                        new
                        {
                            Code = "CNPG",
                            IdpHint = "",
                            Name = "Canadian National Police Services - Prince George"
                        },
                        new
                        {
                            Code = "CNPR",
                            IdpHint = "",
                            Name = "Canadian National Police Services - Prince Rupert"
                        },
                        new
                        {
                            Code = "CNSQ",
                            IdpHint = "",
                            Name = "Canadian National Police Services - Squamish"
                        },
                        new
                        {
                            Code = "CNPS",
                            IdpHint = "",
                            Name = "Canadian National Police Services - Surrey"
                        },
                        new
                        {
                            Code = "CNPT",
                            IdpHint = "",
                            Name = "Canadian National Police Services - Terrace"
                        },
                        new
                        {
                            Code = "CPGL",
                            IdpHint = "",
                            Name = "Canadian Pacific Police - Golden"
                        },
                        new
                        {
                            Code = "CPKA",
                            IdpHint = "",
                            Name = "Canadian Pacific Police - Kamloops"
                        },
                        new
                        {
                            Code = "CPSC",
                            IdpHint = "",
                            Name = "Canadian Pacific Police Service - Cranbrook"
                        },
                        new
                        {
                            Code = "301",
                            IdpHint = "",
                            Name = "Castlegar RCMP"
                        },
                        new
                        {
                            Code = "317",
                            IdpHint = "",
                            Name = "Central Kootenay Regional RCMP"
                        },
                        new
                        {
                            Code = "404",
                            IdpHint = "",
                            Name = "Central Saanich Police Service"
                        },
                        new
                        {
                            Code = "206",
                            IdpHint = "",
                            Name = "Chase RCMP"
                        },
                        new
                        {
                            Code = "502",
                            IdpHint = "",
                            Name = "Chetwynd RCMP"
                        },
                        new
                        {
                            Code = "707",
                            IdpHint = "",
                            Name = "Chilliwack RCMP"
                        },
                        new
                        {
                            Code = "207",
                            IdpHint = "",
                            Name = "Clearwater RCMP"
                        },
                        new
                        {
                            Code = "208",
                            IdpHint = "",
                            Name = "Clinton RCMP"
                        },
                        new
                        {
                            Code = "311",
                            IdpHint = "",
                            Name = "Columbia Valley RCMP"
                        },
                        new
                        {
                            Code = "906",
                            IdpHint = "",
                            Name = "Comox Valley RCMP"
                        },
                        new
                        {
                            Code = "710",
                            IdpHint = "",
                            Name = "Coquitlam RCMP"
                        },
                        new
                        {
                            Code = "303",
                            IdpHint = "",
                            Name = "Cranbrook RCMP"
                        },
                        new
                        {
                            Code = "305",
                            IdpHint = "",
                            Name = "Creston RCMP"
                        },
                        new
                        {
                            Code = "RECI",
                            IdpHint = "",
                            Name = "Criminal Intelligence Section - RCMP"
                        },
                        new
                        {
                            Code = "504",
                            IdpHint = "",
                            Name = "Dawson Creek RCMP"
                        },
                        new
                        {
                            Code = "615",
                            IdpHint = "",
                            Name = "Dease Lake RCMP"
                        },
                        new
                        {
                            Code = "407",
                            IdpHint = "deltapd",
                            Name = "Delta Police Department"
                        },
                        new
                        {
                            Code = "ITC",
                            IdpHint = "",
                            Name = "Digital Forensics Services - RCMP"
                        },
                        new
                        {
                            Code = "DEO",
                            IdpHint = "",
                            Name = "E Division Emergency Ops RCMP"
                        },
                        new
                        {
                            Code = "EHQ",
                            IdpHint = "",
                            Name = "E Division Headquarters - RCMP"
                        },
                        new
                        {
                            Code = "RSE2",
                            IdpHint = "",
                            Name = "E Division Kelowna 2100 - RCMP"
                        },
                        new
                        {
                            Code = "RND2",
                            IdpHint = "",
                            Name = "E Division Prince George 2100 - RCMP"
                        },
                        new
                        {
                            Code = "RPR2",
                            IdpHint = "",
                            Name = "E Division Prince Rupert 2100 - RCMP"
                        },
                        new
                        {
                            Code = "RPSU",
                            IdpHint = "",
                            Name = "E Division Professional Responsibility Unit - RCMP"
                        },
                        new
                        {
                            Code = "EOCC",
                            IdpHint = "",
                            Name = "EHQ OCC RCMP - Warrant Cancellations"
                        },
                        new
                        {
                            Code = "322",
                            IdpHint = "",
                            Name = "Elk Valley RCMP"
                        },
                        new
                        {
                            Code = "405",
                            IdpHint = "esquimaltpd",
                            Name = "Esquimalt Police Department"
                        },
                        new
                        {
                            Code = "IMET",
                            IdpHint = "",
                            Name = "FSOC Integrated Market Enforcement Team - RCMP"
                        },
                        new
                        {
                            Code = "RFD",
                            IdpHint = "",
                            Name = "Federal Serious & Organized Crime EHQ - RCMP"
                        },
                        new
                        {
                            Code = "RFDI",
                            IdpHint = "",
                            Name = "Federal Serious & Organized Crime Island - RCMP"
                        },
                        new
                        {
                            Code = "RFDN",
                            IdpHint = "",
                            Name = "Federal Serious & Organized Crime North - RCMP"
                        },
                        new
                        {
                            Code = "RFDS",
                            IdpHint = "",
                            Name = "Federal Serious & Organized Crime South - RCMP"
                        },
                        new
                        {
                            Code = "6",
                            IdpHint = "",
                            Name = "Forensics Laboratory - RCMP"
                        },
                        new
                        {
                            Code = "506",
                            IdpHint = "",
                            Name = "Fort St James RCMP"
                        },
                        new
                        {
                            Code = "508",
                            IdpHint = "",
                            Name = "Fort St John RCMP"
                        },
                        new
                        {
                            Code = "509",
                            IdpHint = "",
                            Name = "Fraser Lake RCMP"
                        },
                        new
                        {
                            Code = "805",
                            IdpHint = "",
                            Name = "Gabriola Island RCMP"
                        },
                        new
                        {
                            Code = "309",
                            IdpHint = "",
                            Name = "Golden RCMP"
                        },
                        new
                        {
                            Code = "310",
                            IdpHint = "",
                            Name = "Grand Forks RCMP"
                        },
                        new
                        {
                            Code = "745",
                            IdpHint = "",
                            Name = "Hope RCMP"
                        },
                        new
                        {
                            Code = "605",
                            IdpHint = "",
                            Name = "Houston RCMP"
                        },
                        new
                        {
                            Code = "510",
                            IdpHint = "",
                            Name = "Hudson's Hope RCMP"
                        },
                        new
                        {
                            Code = "HRCA",
                            IdpHint = "",
                            Name = "Human Resources & Skills Dev. Canada - Abbotsford"
                        },
                        new
                        {
                            Code = "IHI",
                            IdpHint = "",
                            Name = "Integrated Homicide Investigation Team - RCMP"
                        },
                        new
                        {
                            Code = "INSE",
                            IdpHint = "",
                            Name = "Integrated National Security Enforcement Team - RCMP"
                        },
                        new
                        {
                            Code = "IRGV",
                            IdpHint = "",
                            Name = "Integrated Road Safety Unit Greater Vancouver - RCMP"
                        },
                        new
                        {
                            Code = "40",
                            IdpHint = "",
                            Name = "Island District Victoria - RCMP"
                        },
                        new
                        {
                            Code = "209",
                            IdpHint = "",
                            Name = "Kamloops - Tk'emlups RCMP"
                        },
                        new
                        {
                            Code = "210",
                            IdpHint = "",
                            Name = "Kamloops RCMP"
                        },
                        new
                        {
                            Code = "312",
                            IdpHint = "",
                            Name = "Kaslo RCMP"
                        },
                        new
                        {
                            Code = "105",
                            IdpHint = "",
                            Name = "Kelowna RCMP"
                        },
                        new
                        {
                            Code = "105C",
                            IdpHint = "",
                            Name = "Kelowna RCMP - Daytime/Records"
                        },
                        new
                        {
                            Code = "106",
                            IdpHint = "",
                            Name = "Keremeos RCMP"
                        },
                        new
                        {
                            Code = "314",
                            IdpHint = "",
                            Name = "Kimberley RCMP"
                        },
                        new
                        {
                            Code = "607",
                            IdpHint = "",
                            Name = "Kitimat RCMP"
                        },
                        new
                        {
                            Code = "824",
                            IdpHint = "",
                            Name = "Ladysmith RCMP"
                        },
                        new
                        {
                            Code = "808",
                            IdpHint = "",
                            Name = "Lake Cowichan RCMP"
                        },
                        new
                        {
                            Code = "716",
                            IdpHint = "",
                            Name = "Langley RCMP"
                        },
                        new
                        {
                            Code = "211",
                            IdpHint = "",
                            Name = "Lillooet RCMP"
                        },
                        new
                        {
                            Code = "621",
                            IdpHint = "",
                            Name = "Lisims / Nass Valley RCMP"
                        },
                        new
                        {
                            Code = "212",
                            IdpHint = "",
                            Name = "Logan Lake RCMP"
                        },
                        new
                        {
                            Code = "RLMD",
                            IdpHint = "",
                            Name = "Lower Mainland District Surrey - RCMP"
                        },
                        new
                        {
                            Code = "213",
                            IdpHint = "",
                            Name = "Lytton RCMP"
                        },
                        new
                        {
                            Code = "522",
                            IdpHint = "",
                            Name = "Mackenzie RCMP"
                        },
                        new
                        {
                            Code = "ATF",
                            IdpHint = "",
                            Name = "Major Crime Section - Integrated Municipal Provincial Auto Crime Team - RCMP"
                        },
                        new
                        {
                            Code = "RND5",
                            IdpHint = "",
                            Name = "Major Crime Section - North District - RCMP"
                        },
                        new
                        {
                            Code = "RMCS",
                            IdpHint = "",
                            Name = "Major Crime Section - RCMP"
                        },
                        new
                        {
                            Code = "RSE5",
                            IdpHint = "",
                            Name = "Major Crime Section - Southeast District - RCMP"
                        },
                        new
                        {
                            Code = "IMCJ",
                            IdpHint = "",
                            Name = "Major Crime Section - Vancouver Island Integrated - RCMP"
                        },
                        new
                        {
                            Code = "608",
                            IdpHint = "",
                            Name = "Masset RCMP"
                        },
                        new
                        {
                            Code = "512",
                            IdpHint = "",
                            Name = "McBride RCMP"
                        },
                        new
                        {
                            Code = "215",
                            IdpHint = "",
                            Name = "Merritt RCMP"
                        },
                        new
                        {
                            Code = "488",
                            IdpHint = "",
                            Name = "Metro Vancouver Transit Police"
                        },
                        new
                        {
                            Code = "315",
                            IdpHint = "",
                            Name = "Midway RCMP"
                        },
                        new
                        {
                            Code = "719",
                            IdpHint = "",
                            Name = "Mission RCMP"
                        },
                        new
                        {
                            Code = "316",
                            IdpHint = "",
                            Name = "Nakusp RCMP"
                        },
                        new
                        {
                            Code = "810",
                            IdpHint = "",
                            Name = "Nanaimo RCMP"
                        },
                        new
                        {
                            Code = "810A",
                            IdpHint = "",
                            Name = "Nanaimo RCMP - Traffic"
                        },
                        new
                        {
                            Code = "411",
                            IdpHint = "",
                            Name = "Nelson Police Department"
                        },
                        new
                        {
                            Code = "604",
                            IdpHint = "",
                            Name = "New Hazelton RCMP"
                        },
                        new
                        {
                            Code = "409",
                            IdpHint = "",
                            Name = "New Westminster Police Department"
                        },
                        new
                        {
                            Code = "907",
                            IdpHint = "",
                            Name = "Nootka Sound RCMP"
                        },
                        new
                        {
                            Code = "NCMD",
                            IdpHint = "",
                            Name = "North Coast Marine Services - RCMP"
                        },
                        new
                        {
                            Code = "804",
                            IdpHint = "",
                            Name = "North Cowichan - Duncan RCMP"
                        },
                        new
                        {
                            Code = "RNDO",
                            IdpHint = "",
                            Name = "North District Prince George - RCMP"
                        },
                        new
                        {
                            Code = "101",
                            IdpHint = "",
                            Name = "North Okanagan Rural RCMP"
                        },
                        new
                        {
                            Code = "720",
                            IdpHint = "",
                            Name = "North Vancouver RCMP"
                        },
                        new
                        {
                            Code = "505",
                            IdpHint = "",
                            Name = "Northern Rockies RCMP"
                        },
                        new
                        {
                            Code = "406",
                            IdpHint = "",
                            Name = "Oak Bay Police Department"
                        },
                        new
                        {
                            Code = "109",
                            IdpHint = "",
                            Name = "Oliver RCMP"
                        },
                        new
                        {
                            Code = "110",
                            IdpHint = "",
                            Name = "Osoyoos RCMP"
                        },
                        new
                        {
                            Code = "811",
                            IdpHint = "",
                            Name = "Outer Gulf Islands RCMP"
                        },
                        new
                        {
                            Code = "922",
                            IdpHint = "",
                            Name = "Parksville / Oceanside RCMP"
                        },
                        new
                        {
                            Code = "112",
                            IdpHint = "",
                            Name = "Penticton RCMP"
                        },
                        new
                        {
                            Code = "910",
                            IdpHint = "",
                            Name = "Port Alberni RCMP"
                        },
                        new
                        {
                            Code = "911",
                            IdpHint = "",
                            Name = "Port Alice RCMP"
                        },
                        new
                        {
                            Code = "923",
                            IdpHint = "",
                            Name = "Port Hardy RCMP"
                        },
                        new
                        {
                            Code = "913",
                            IdpHint = "",
                            Name = "Port McNeill RCMP"
                        },
                        new
                        {
                            Code = "412",
                            IdpHint = "",
                            Name = "Port Moody Police Department"
                        },
                        new
                        {
                            Code = "915",
                            IdpHint = "",
                            Name = "Powell River RCMP"
                        },
                        new
                        {
                            Code = "521",
                            IdpHint = "",
                            Name = "Prince George RCMP"
                        },
                        new
                        {
                            Code = "RPRO",
                            IdpHint = "",
                            Name = "Prince Rupert  (Do Not Use)  N.District RCMP"
                        },
                        new
                        {
                            Code = "611",
                            IdpHint = "",
                            Name = "Prince Rupert RCMP"
                        },
                        new
                        {
                            Code = "113",
                            IdpHint = "",
                            Name = "Princeton RCMP"
                        },
                        new
                        {
                            Code = "916",
                            IdpHint = "",
                            Name = "Quadra Island RCMP"
                        },
                        new
                        {
                            Code = "612",
                            IdpHint = "",
                            Name = "Queen Charlotte RCMP"
                        },
                        new
                        {
                            Code = "515",
                            IdpHint = "",
                            Name = "Quesnel RCMP"
                        },
                        new
                        {
                            Code = "124",
                            IdpHint = "",
                            Name = "Revelstoke RCMP"
                        },
                        new
                        {
                            Code = "722",
                            IdpHint = "",
                            Name = "Richmond RCMP"
                        },
                        new
                        {
                            Code = "713",
                            IdpHint = "",
                            Name = "Ridge Meadows RCMP"
                        },
                        new
                        {
                            Code = "728",
                            IdpHint = "",
                            Name = "SPS - LENS ONLY"
                        },
                        new
                        {
                            Code = "403",
                            IdpHint = "saanichpd",
                            Name = "Saanich Police Department"
                        },
                        new
                        {
                            Code = "321",
                            IdpHint = "",
                            Name = "Salmo RCMP"
                        },
                        new
                        {
                            Code = "116",
                            IdpHint = "",
                            Name = "Salmon Arm RCMP"
                        },
                        new
                        {
                            Code = "806",
                            IdpHint = "",
                            Name = "Saltspring RCMP"
                        },
                        new
                        {
                            Code = "917",
                            IdpHint = "",
                            Name = "Sayward RCMP"
                        },
                        new
                        {
                            Code = "812",
                            IdpHint = "",
                            Name = "Shawnigan Lake RCMP"
                        },
                        new
                        {
                            Code = "117",
                            IdpHint = "",
                            Name = "Sicamous RCMP"
                        },
                        new
                        {
                            Code = "814",
                            IdpHint = "",
                            Name = "Sidney / North Saanich RCMP"
                        },
                        new
                        {
                            Code = "318",
                            IdpHint = "",
                            Name = "Slocan Lake RCMP"
                        },
                        new
                        {
                            Code = "622",
                            IdpHint = "",
                            Name = "Smithers RCMP"
                        },
                        new
                        {
                            Code = "815",
                            IdpHint = "",
                            Name = "Sooke RCMP"
                        },
                        new
                        {
                            Code = "100",
                            IdpHint = "",
                            Name = "Southeast District Kelowna - RCMP"
                        },
                        new
                        {
                            Code = "725",
                            IdpHint = "",
                            Name = "Squamish RCMP"
                        },
                        new
                        {
                            Code = "614",
                            IdpHint = "",
                            Name = "Stewart RCMP"
                        },
                        new
                        {
                            Code = "LNTP",
                            IdpHint = "",
                            Name = "Stl' atl' imx Tribal Police Lillooet - RCMP"
                        },
                        new
                        {
                            Code = "SXTP",
                            IdpHint = "",
                            Name = "Stl' atl' imx Tribal Police Mount Currie - RCMP"
                        },
                        new
                        {
                            Code = "121",
                            IdpHint = "",
                            Name = "Summerland RCMP"
                        },
                        new
                        {
                            Code = "743",
                            IdpHint = "",
                            Name = "Sunshine Coast RCMP"
                        },
                        new
                        {
                            Code = "726",
                            IdpHint = "",
                            Name = "Surrey RCMP"
                        },
                        new
                        {
                            Code = "TAKL",
                            IdpHint = "",
                            Name = "Takla Landing RCMP"
                        },
                        new
                        {
                            Code = "617",
                            IdpHint = "",
                            Name = "Terrace RCMP"
                        },
                        new
                        {
                            Code = "924",
                            IdpHint = "",
                            Name = "Texada Island RCMP"
                        },
                        new
                        {
                            Code = "919",
                            IdpHint = "",
                            Name = "Tofino RCMP (Ahousaht)"
                        },
                        new
                        {
                            Code = "919A",
                            IdpHint = "",
                            Name = "Tofino RCMP - After Hours/Cells"
                        },
                        new
                        {
                            Code = "324",
                            IdpHint = "",
                            Name = "Trail and Greater District RCMP"
                        },
                        new
                        {
                            Code = "525",
                            IdpHint = "",
                            Name = "Tsay Keh Dene RCMP"
                        },
                        new
                        {
                            Code = "524",
                            IdpHint = "",
                            Name = "Tumbler Ridge RCMP"
                        },
                        new
                        {
                            Code = "920",
                            IdpHint = "",
                            Name = "Ucluelet RCMP"
                        },
                        new
                        {
                            Code = "727",
                            IdpHint = "",
                            Name = "University of British Columbia RCMP"
                        },
                        new
                        {
                            Code = "218",
                            IdpHint = "",
                            Name = "Valemount RCMP"
                        },
                        new
                        {
                            Code = "401",
                            IdpHint = "",
                            Name = "Vancouver Police Department"
                        },
                        new
                        {
                            Code = "401A",
                            IdpHint = "",
                            Name = "Vancouver Police Department - Fingerprinting"
                        },
                        new
                        {
                            Code = "5",
                            IdpHint = "",
                            Name = "Vancouver Police Department Reserves"
                        },
                        new
                        {
                            Code = "400",
                            IdpHint = "",
                            Name = "Vancouver Police- DNA"
                        },
                        new
                        {
                            Code = "517",
                            IdpHint = "",
                            Name = "Vanderhoof RCMP"
                        },
                        new
                        {
                            Code = "119",
                            IdpHint = "",
                            Name = "Vernon RCMP"
                        },
                        new
                        {
                            Code = "RID2",
                            IdpHint = "",
                            Name = "Victoria 5001 - RCMP"
                        },
                        new
                        {
                            Code = "402",
                            IdpHint = "vicpd",
                            Name = "Victoria Police Department"
                        },
                        new
                        {
                            Code = "VPED",
                            IdpHint = "",
                            Name = "Victoria, City of - Parking Enforcement Detachment"
                        },
                        new
                        {
                            Code = "WCMD",
                            IdpHint = "",
                            Name = "West Coast Marine Services - RCMP"
                        },
                        new
                        {
                            Code = "821",
                            IdpHint = "",
                            Name = "West Shore RCMP"
                        },
                        new
                        {
                            Code = "821B",
                            IdpHint = "",
                            Name = "West Shore RCMP - URGENT Fax"
                        },
                        new
                        {
                            Code = "410",
                            IdpHint = "",
                            Name = "West Vancouver Police Department"
                        },
                        new
                        {
                            Code = "738",
                            IdpHint = "",
                            Name = "Whistler/Pemberton RCMP"
                        },
                        new
                        {
                            Code = "729",
                            IdpHint = "",
                            Name = "White Rock RCMP"
                        },
                        new
                        {
                            Code = "221",
                            IdpHint = "",
                            Name = "Williams Lake RCMP"
                        },
                        new
                        {
                            Code = "SWHQ",
                            IdpHint = "",
                            Name = "ZZ RCMP (Do Not Use) SW District HQ"
                        },
                        new
                        {
                            Code = "401X",
                            IdpHint = "",
                            Name = "ZZzVancouver Police Department"
                        });
                });

            modelBuilder.Entity("Pidp.Models.OutBoxEvent.DeferredEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Instant>("DateOccurred")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant?>("DeferUntil")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventPayload")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DeferredEvent");
                });

            modelBuilder.Entity("Pidp.Models.OutBoxEvent.ExportedEvent", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EventId"));

                    b.Property<string>("AggregateId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AggregateType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("DateOccurred")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventPayload")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EventId");

                    b.ToTable("OutBoxedExportedEvent", (string)null);
                });

            modelBuilder.Entity("Pidp.Models.OutBoxEvent.IdempotentConsumer", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("text");

                    b.Property<string>("Consumer")
                        .HasColumnType("text");

                    b.HasKey("MessageId", "Consumer");

                    b.ToTable("IdempotentConsumers", (string)null);
                });

            modelBuilder.Entity("Pidp.Models.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<LocalDate?>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("Cpn")
                        .HasColumnType("text");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("JobTitle")
                        .HasColumnType("text");

                    b.Property<string>("Jpdid")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("PreferredFirstName")
                        .HasColumnType("text");

                    b.Property<string>("PreferredLastName")
                        .HasColumnType("text");

                    b.Property<string>("PreferredMiddleName")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Jpdid")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Party");
                });

            modelBuilder.Entity("Pidp.Models.PartyAccessAdministrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PartyId")
                        .IsUnique();

                    b.ToTable("PartyAccessAdministrator");
                });

            modelBuilder.Entity("Pidp.Models.PartyAlternateId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("PartyAlternateId");
                });

            modelBuilder.Entity("Pidp.Models.PartyLicenceDeclaration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CollegeCode")
                        .HasColumnType("integer");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LicenceNumber")
                        .HasColumnType("text");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CollegeCode");

                    b.HasIndex("PartyId")
                        .IsUnique();

                    b.ToTable("PartyLicenceDeclaration");
                });

            modelBuilder.Entity("Pidp.Models.PartyOrgainizationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OrganizationCode")
                        .HasColumnType("integer");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationCode");

                    b.HasIndex("PartyId")
                        .IsUnique();

                    b.ToTable("PartyOrgainizationDetail");
                });

            modelBuilder.Entity("Pidp.Models.ProcessFlow.DomainEventProcessStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Errors")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ProcessFlowEventId")
                        .HasColumnType("integer");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.Property<int?>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProcessFlowEventId");

                    b.ToTable("DomainEventProcessStatus");
                });

            modelBuilder.Entity("Pidp.Models.ProcessFlow.ProcessFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessTypeCode")
                        .HasColumnType("integer");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IdentityProvider")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ProcessSectionId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Sequence")
                        .HasColumnType("numeric(3,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessSectionId");

                    b.ToTable("ProcessFlow");
                });

            modelBuilder.Entity("Pidp.Models.ProcessFlow.ProcessFlowEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FromDomainEvent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ProcessFlowId")
                        .HasColumnType("integer");

                    b.Property<string>("ToDomainEvent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProcessFlowId");

                    b.ToTable("ProcessFlowEvent");
                });

            modelBuilder.Entity("Pidp.Models.ProcessFlow.ProcessSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProcessSection");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Created = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Modified = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Name = "organizationDetails"
                        },
                        new
                        {
                            Id = -2,
                            Created = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Modified = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Name = "demographics"
                        },
                        new
                        {
                            Id = -3,
                            Created = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Modified = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Name = "driverFitness"
                        },
                        new
                        {
                            Id = -4,
                            Created = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Modified = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Name = "digitalEvidence"
                        },
                        new
                        {
                            Id = -5,
                            Created = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Modified = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Name = "digitalEvidenceCaseManagement"
                        },
                        new
                        {
                            Id = -6,
                            Created = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Modified = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Name = "digitalEvidenceCounsel"
                        },
                        new
                        {
                            Id = -7,
                            Created = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Modified = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Name = "submittingAgencyCaseManagement"
                        },
                        new
                        {
                            Id = -8,
                            Created = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Modified = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Name = "uci"
                        },
                        new
                        {
                            Id = -9,
                            Created = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Modified = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Name = "administratorInfo"
                        },
                        new
                        {
                            Id = -10,
                            Created = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Modified = NodaTime.Instant.FromUnixTimeTicks(0L),
                            Name = "admin"
                        });
                });

            modelBuilder.Entity("Pidp.Models.SubmittingAgencyRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RequestId"));

                    b.Property<string>("AgencyFileNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CaseId")
                        .HasColumnType("integer");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<string>("RCCNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RequestStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("RequestedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("RequestId");

                    b.HasIndex("PartyId");

                    b.HasIndex(new[] { "RCCNumber" }, "IX_RCCNumber");

                    b.ToTable("SubmittingAgencyRequest");
                });

            modelBuilder.Entity("Pidp.Models.UserAccountChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ChangeData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("Completed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deactivated")
                        .HasColumnType("boolean");

                    b.Property<int>("EventMessageId")
                        .HasColumnType("integer");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TraceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("UserAccountChange");
                });

            modelBuilder.Entity("Pidp.Models.DigitalEvidence", b =>
                {
                    b.HasBaseType("Pidp.Models.AccessRequest");

                    b.Property<List<AssignedRegion>>("AssignedRegions")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrganizationType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParticipantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("DigitalEvidence");
                });

            modelBuilder.Entity("Pidp.Models.DigitalEvidenceDefence", b =>
                {
                    b.HasBaseType("Pidp.Models.AccessRequest");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrganizationType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParticipantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("DigitalEvidenceDefence");
                });

            modelBuilder.Entity("Pidp.Models.DigitalEvidenceDisclosure", b =>
                {
                    b.HasBaseType("Pidp.Models.AccessRequest");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrganizationType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParticipantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("DigitalEvidenceDisclosure");
                });

            modelBuilder.Entity("Pidp.Models.FacilityAddress", b =>
                {
                    b.HasBaseType("Pidp.Models.Address");

                    b.Property<int>("FacilityId")
                        .HasColumnType("integer");

                    b.HasIndex("FacilityId")
                        .IsUnique();

                    b.ToTable("Address");

                    b.HasDiscriminator().HasValue("FacilityAddress");
                });

            modelBuilder.Entity("Pidp.Models.HcimAccountTransfer", b =>
                {
                    b.HasBaseType("Pidp.Models.AccessRequest");

                    b.Property<string>("LdapUsername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("HcimAccountTransfer");
                });

            modelBuilder.Entity("Pidp.Models.HcimEnrolment", b =>
                {
                    b.HasBaseType("Pidp.Models.AccessRequest");

                    b.Property<bool>("ManagesTasks")
                        .HasColumnType("boolean");

                    b.Property<bool>("ModifiesPhns")
                        .HasColumnType("boolean");

                    b.Property<bool>("RecordsNewborns")
                        .HasColumnType("boolean");

                    b.Property<bool>("SearchesIdentifiers")
                        .HasColumnType("boolean");

                    b.ToTable("HcimEnrolment");
                });

            modelBuilder.Entity("Pidp.Models.AccessRequest", b =>
                {
                    b.HasOne("Pidp.Models.Party", "Party")
                        .WithMany("AccessRequests")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Pidp.Models.Address", b =>
                {
                    b.HasOne("Pidp.Models.Lookups.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pidp.Models.Lookups.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Pidp.Models.AgencyRequestAttachment", b =>
                {
                    b.HasOne("Pidp.Models.SubmittingAgencyRequest", "SubmittingAgencyRequest")
                        .WithMany("AgencyRequestAttachments")
                        .HasForeignKey("SubmittingAgencyRequestRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubmittingAgencyRequest");
                });

            modelBuilder.Entity("Pidp.Models.CorrectionServiceDetail", b =>
                {
                    b.HasOne("Pidp.Models.Lookups.CorrectionService", "CorrectionService")
                        .WithMany()
                        .HasForeignKey("CorrectionServiceCode");

                    b.HasOne("Pidp.Models.PartyOrgainizationDetail", "OrgainizationDetail")
                        .WithMany()
                        .HasForeignKey("OrgainizationDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorrectionService");

                    b.Navigation("OrgainizationDetail");
                });

            modelBuilder.Entity("Pidp.Models.CourtLocationAccessRequest", b =>
                {
                    b.HasOne("Pidp.Models.Lookups.CourtLocation", "CourtLocation")
                        .WithMany()
                        .HasForeignKey("CourtLocationCode");

                    b.HasOne("Pidp.Models.Lookups.CourtSubLocation", "CourtSubLocation")
                        .WithMany()
                        .HasForeignKey("CourtSubLocationId");

                    b.HasOne("Pidp.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourtLocation");

                    b.Navigation("CourtSubLocation");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Pidp.Models.EndorsementRelationship", b =>
                {
                    b.HasOne("Pidp.Models.Endorsement", "Endorsement")
                        .WithMany("EndorsementRelationships")
                        .HasForeignKey("EndorsementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pidp.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endorsement");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Pidp.Models.EndorsementRequest", b =>
                {
                    b.HasOne("Pidp.Models.Party", "ReceivingParty")
                        .WithMany()
                        .HasForeignKey("ReceivingPartyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pidp.Models.Party", "RequestingParty")
                        .WithMany()
                        .HasForeignKey("RequestingPartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReceivingParty");

                    b.Navigation("RequestingParty");
                });

            modelBuilder.Entity("Pidp.Models.Facility", b =>
                {
                    b.HasOne("Pidp.Models.Party", "Party")
                        .WithOne("Facility")
                        .HasForeignKey("Pidp.Models.Facility", "PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Pidp.Models.FutureUserChangeEvent", b =>
                {
                    b.HasOne("Pidp.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Pidp.Models.JusticeSectorDetail", b =>
                {
                    b.HasOne("Pidp.Models.Lookups.JusticeSector", "JusticeSector")
                        .WithMany()
                        .HasForeignKey("JusticeSectorCode");

                    b.HasOne("Pidp.Models.PartyOrgainizationDetail", "OrgainizationDetail")
                        .WithMany()
                        .HasForeignKey("OrgainizationDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JusticeSector");

                    b.Navigation("OrgainizationDetail");
                });

            modelBuilder.Entity("Pidp.Models.Lookups.CourtSubLocation", b =>
                {
                    b.HasOne("Pidp.Models.Lookups.CourtLocation", "CourtLocation")
                        .WithMany("CourtSubLocations")
                        .HasForeignKey("CourtLocationCode");

                    b.Navigation("CourtLocation");
                });

            modelBuilder.Entity("Pidp.Models.PartyAccessAdministrator", b =>
                {
                    b.HasOne("Pidp.Models.Party", "Party")
                        .WithOne("AccessAdministrator")
                        .HasForeignKey("Pidp.Models.PartyAccessAdministrator", "PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Pidp.Models.PartyAlternateId", b =>
                {
                    b.HasOne("Pidp.Models.Party", "Party")
                        .WithMany("AlternateIds")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Pidp.Models.PartyLicenceDeclaration", b =>
                {
                    b.HasOne("Pidp.Models.Lookups.College", "College")
                        .WithMany()
                        .HasForeignKey("CollegeCode");

                    b.HasOne("Pidp.Models.Party", "Party")
                        .WithOne("LicenceDeclaration")
                        .HasForeignKey("Pidp.Models.PartyLicenceDeclaration", "PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("College");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Pidp.Models.PartyOrgainizationDetail", b =>
                {
                    b.HasOne("Pidp.Models.Lookups.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pidp.Models.Party", "Party")
                        .WithOne("OrgainizationDetail")
                        .HasForeignKey("Pidp.Models.PartyOrgainizationDetail", "PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Pidp.Models.ProcessFlow.DomainEventProcessStatus", b =>
                {
                    b.HasOne("Pidp.Models.ProcessFlow.ProcessFlowEvent", "ProcessFlowEvent")
                        .WithMany()
                        .HasForeignKey("ProcessFlowEventId");

                    b.Navigation("ProcessFlowEvent");
                });

            modelBuilder.Entity("Pidp.Models.ProcessFlow.ProcessFlow", b =>
                {
                    b.HasOne("Pidp.Models.ProcessFlow.ProcessSection", "ProcessSection")
                        .WithMany()
                        .HasForeignKey("ProcessSectionId");

                    b.Navigation("ProcessSection");
                });

            modelBuilder.Entity("Pidp.Models.ProcessFlow.ProcessFlowEvent", b =>
                {
                    b.HasOne("Pidp.Models.ProcessFlow.ProcessFlow", "ProcessFlow")
                        .WithMany()
                        .HasForeignKey("ProcessFlowId");

                    b.Navigation("ProcessFlow");
                });

            modelBuilder.Entity("Pidp.Models.SubmittingAgencyRequest", b =>
                {
                    b.HasOne("Pidp.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Pidp.Models.UserAccountChange", b =>
                {
                    b.HasOne("Pidp.Models.Party", "Party")
                        .WithMany("AccountChanges")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Pidp.Models.DigitalEvidence", b =>
                {
                    b.HasOne("Pidp.Models.AccessRequest", null)
                        .WithOne()
                        .HasForeignKey("Pidp.Models.DigitalEvidence", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pidp.Models.DigitalEvidenceDefence", b =>
                {
                    b.HasOne("Pidp.Models.AccessRequest", null)
                        .WithOne()
                        .HasForeignKey("Pidp.Models.DigitalEvidenceDefence", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pidp.Models.DigitalEvidenceDisclosure", b =>
                {
                    b.HasOne("Pidp.Models.AccessRequest", null)
                        .WithOne()
                        .HasForeignKey("Pidp.Models.DigitalEvidenceDisclosure", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pidp.Models.FacilityAddress", b =>
                {
                    b.HasOne("Pidp.Models.Facility", "Facility")
                        .WithOne("PhysicalAddress")
                        .HasForeignKey("Pidp.Models.FacilityAddress", "FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("Pidp.Models.HcimAccountTransfer", b =>
                {
                    b.HasOne("Pidp.Models.AccessRequest", null)
                        .WithOne()
                        .HasForeignKey("Pidp.Models.HcimAccountTransfer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pidp.Models.HcimEnrolment", b =>
                {
                    b.HasOne("Pidp.Models.AccessRequest", null)
                        .WithOne()
                        .HasForeignKey("Pidp.Models.HcimEnrolment", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pidp.Models.Endorsement", b =>
                {
                    b.Navigation("EndorsementRelationships");
                });

            modelBuilder.Entity("Pidp.Models.Facility", b =>
                {
                    b.Navigation("PhysicalAddress");
                });

            modelBuilder.Entity("Pidp.Models.Lookups.CourtLocation", b =>
                {
                    b.Navigation("CourtSubLocations");
                });

            modelBuilder.Entity("Pidp.Models.Party", b =>
                {
                    b.Navigation("AccessAdministrator");

                    b.Navigation("AccessRequests");

                    b.Navigation("AccountChanges");

                    b.Navigation("AlternateIds");

                    b.Navigation("Facility");

                    b.Navigation("LicenceDeclaration");

                    b.Navigation("OrgainizationDetail");
                });

            modelBuilder.Entity("Pidp.Models.SubmittingAgencyRequest", b =>
                {
                    b.Navigation("AgencyRequestAttachments");
                });
#pragma warning restore 612, 618
        }
    }
}
