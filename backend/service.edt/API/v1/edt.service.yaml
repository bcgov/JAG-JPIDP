openapi: 3.0.1
info:
  title: EDT Core Service API
  description: DIAM APIs for accessing EDT related services
  version: v1
paths:
  '/api/person/{partyId}':
    get:
      tags:
        - Person
      parameters:
        - name: partyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.EdtPersonDto'
            application/json:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.EdtPersonDto'
            text/json:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.EdtPersonDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
  '/api/person/key/{key}':
    get:
      tags:
        - Person
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.EdtPersonDto'
            application/json:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.EdtPersonDto'
            text/json:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.EdtPersonDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
  '/api/person/identifier/{identifierType}/{identifierValue}':
    get:
      tags:
        - Person
      parameters:
        - name: identifierType
          in: path
          required: true
          schema:
            type: string
        - name: identifierValue
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Common.Models.EDT.EdtPersonDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Common.Models.EDT.EdtPersonDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Common.Models.EDT.EdtPersonDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: [ ]
  '/api/user/party/{partyId}':
    get:
      tags:
        - User
      parameters:
        - name: partyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.EdtUserDto'
            application/json:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.EdtUserDto'
            text/json:
              schema:
                $ref: '#/components/schemas/Common.Models.EDT.EdtUserDto'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2:
            - admin-authentication-policy
components:
  schemas:
    Common.Models.EDT.EdtField:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    Common.Models.EDT.EdtPersonAddress:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        email:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
      additionalProperties: false
    Common.Models.EDT.EdtPersonDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        key:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/Common.Models.EDT.EdtPersonAddress'
        role:
          type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Common.Models.EDT.EdtField'
          nullable: true
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Common.Models.EDT.IdentifierModel'
          nullable: true
      additionalProperties: false
    Common.Models.EDT.EdtUserDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        isActive:
          type: boolean
          nullable: true
        accountType:
          type: string
          nullable: true
      additionalProperties: false
    Common.Models.EDT.IdentifierModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        entityType:
          type: string
          nullable: true
        identifierValue:
          type: string
          nullable: true
        identifierType:
          type: string
          nullable: true
        entityId:
          type: integer
          format: int32
      additionalProperties: false
    Microsoft.AspNetCore.Mvc.ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
  securitySchemes:
    Bearer:
      type: apiKey
      description: 'Standard Authorization header using the Bearer scheme. Example: "bearer {token}"'
      name: Authorization
      in: header
    oauth2:
      type: oauth2
      description: DIAM Server OpenId Security Scheme
      flows:
        clientCredentials:
          authorizationUrl: https://dev.common-sso.justice.gov.bc.ca/auth/realms/BCPS/protocol/openid-connect/auth
          tokenUrl: https://dev.common-sso.justice.gov.bc.ca/auth/realms/BCPS/protocol/openid-connect/token
          scopes:
            openid: DIAM Server HTTP Api
security:
  - Bearer: [ ]