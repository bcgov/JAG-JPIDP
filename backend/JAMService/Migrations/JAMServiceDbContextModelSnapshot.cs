// <auto-generated />
using System.Collections.Generic;
using JAMService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JAMService.Migrations
{
    [DbContext(typeof(JAMServiceDbContext))]
    partial class JAMServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("jamservice")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Common.Models.IdempotentConsumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Consumer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MessageId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("IdempotentConsumers", "jamservice");
                });

            modelBuilder.Entity("JAMService.Entities.AppRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AppRequestId")
                        .HasColumnType("integer");

                    b.Property<string>("AppRequestType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AppRequests", "jamservice");
                });

            modelBuilder.Entity("JAMService.Entities.AppRoleMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("ExactSourceRoleMatch")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRealmGroup")
                        .HasColumnType("boolean");

                    b.Property<List<string>>("SourceRoles")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<List<string>>("TargetRoles")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("AppRoleMappings", "jamservice");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            ApplicationId = -1,
                            Description = "Read-only: Current protection orders and expired",
                            ExactSourceRoleMatch = true,
                            IsRealmGroup = true,
                            SourceRoles = new List<string> { "POS_VIEW_ALL_USER", "POS_USER" },
                            TargetRoles = new List<string> { "POR_READ_EXPIRED_ORDERS" }
                        },
                        new
                        {
                            Id = -2,
                            ApplicationId = -1,
                            Description = "Read-only: Current protection orders only",
                            ExactSourceRoleMatch = true,
                            IsRealmGroup = true,
                            SourceRoles = new List<string> { "POS_SEL_USER", "POS_USER" },
                            TargetRoles = new List<string> { "POR_READ_VALID_ONLY" }
                        },
                        new
                        {
                            Id = -3,
                            ApplicationId = -1,
                            Description = "Regular user: Admin without remove orders permission",
                            ExactSourceRoleMatch = true,
                            IsRealmGroup = true,
                            SourceRoles = new List<string> { "POS_USER" },
                            TargetRoles = new List<string> { "POR_READ_WRITE" }
                        },
                        new
                        {
                            Id = -4,
                            ApplicationId = -1,
                            Description = "Admin with remove orders permission",
                            ExactSourceRoleMatch = true,
                            IsRealmGroup = true,
                            SourceRoles = new List<string> { "POS_USER", "POS_DEL_USER" },
                            TargetRoles = new List<string> { "POR_ADMIN_WITH_SEALING" }
                        },
                        new
                        {
                            Id = -5,
                            ApplicationId = -1,
                            Description = "Ability to seal protection orders and mark as removed",
                            ExactSourceRoleMatch = true,
                            IsRealmGroup = true,
                            SourceRoles = new List<string> { "POS_USER", "POS_REMOVE_USER" },
                            TargetRoles = new List<string> { "POR_ADMIN_WITH_SEALING" }
                        });
                });

            modelBuilder.Entity("JAMService.Entities.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GroupPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JUSTINAppName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LaunchUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("ValidIDPs")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.ToTable("Applications", "jamservice");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Description = "JUSTIN Protection Order Registry",
                            GroupPath = "/JAM/POR",
                            JUSTINAppName = "POR",
                            LaunchUrl = "",
                            Name = "JAM_POR",
                            ValidIDPs = new List<string> { "azuread" }
                        });
                });

            modelBuilder.Entity("JAMService.Entities.IDPMapper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("SourceIdp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SourceRealm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TargetIdp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TargetRealm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("IDPMappers", "jamservice");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            SourceIdp = "azuread",
                            SourceRealm = "BCPS",
                            TargetIdp = "azure-idir",
                            TargetRealm = "ISB"
                        });
                });

            modelBuilder.Entity("JAMService.Entities.AppRoleMapping", b =>
                {
                    b.HasOne("JAMService.Entities.Application", "Application")
                        .WithMany("RoleMappings")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("JAMService.Entities.Application", b =>
                {
                    b.Navigation("RoleMappings");
                });
#pragma warning restore 612, 618
        }
    }
}
