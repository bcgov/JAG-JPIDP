// <auto-generated />
using System;
using ApprovalFlow.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApprovalFlow.Data.Migrations
{
    [DbContext(typeof(ApprovalFlowDataStoreDbContext))]
    [Migration("20230808203649_Approvals")]
    partial class Approvals
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("approval")
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApprovalFlow.Features.Approval.ApprovalHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ApprovalRequestId")
                        .HasColumnType("integer");

                    b.Property<string>("Approver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DecisionNote")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalRequestId");

                    b.ToTable("ApprovalHistory", "approval");
                });

            modelBuilder.Entity("ApprovalFlow.Features.Approval.ApprovalRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessRequestId")
                        .HasColumnType("integer");

                    b.Property<Instant?>("Approved")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Instant>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant?>("Requested")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ApprovalRequest", "approval");
                });

            modelBuilder.Entity("ApprovalFlow.Models.IdempotentConsumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Instant>("ConsumeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Consumer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MessageId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("IdempotentConsumers", "approval");
                });

            modelBuilder.Entity("ApprovalFlow.Features.Approval.ApprovalHistory", b =>
                {
                    b.HasOne("ApprovalFlow.Features.Approval.ApprovalRequest", "ApprovalRequest")
                        .WithMany("History")
                        .HasForeignKey("ApprovalRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovalRequest");
                });

            modelBuilder.Entity("ApprovalFlow.Features.Approval.ApprovalRequest", b =>
                {
                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
