name: diam-sso-dev
 
on:
  push:
    branches: [develop,test]
    paths:
      - "auth/**"
      - ".github/workflows/build-push-sso-dev.yml"
  workflow_dispatch:
env:
  IMAGE_NAME: diam-sso
  WORKING_DIRECTORY: ./auth
 
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
 
    steps:
      - uses: actions/checkout@v3
      - name: Log into registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.OPENSHIFT_REGISTRY }}
          username: ${{ secrets.OPENSHIFT_DEPLOYER_USERNAME }}
          password: ${{ secrets.OPENSHIFT_DEPLOYER_PASSWORD }}

       # Get SHORT_SHA to tag images
      - name: Get short SHA
        id: short_sha
        run: |
          echo "::set-output name=SHORT_SHA::$(git rev-parse --short HEAD)"
          echo "Short SHA: $SHORT_SHA"    
 
      - name: Login to Artifactory
        uses: docker/login-action@v1
        with:
          registry: artifacts.developer.gov.bc.ca
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}
 
      - name: Build Image
        working-directory: ${{env.WORKING_DIRECTORY}}
        run: |
          docker build -t artifacts.developer.gov.bc.ca/de27-general-docker/${{env.IMAGE_NAME}}:${GITHUB_REF##*/} -f Dockerfile.kc24 .
     
      - name: Docker Push to Artifactory
        id: publish     
        run: |
          docker push artifacts.developer.gov.bc.ca/de27-general-docker/${{env.IMAGE_NAME}}:${GITHUB_REF##*/}


      - name: Checkout ArgoCD Repo
        id: gitops
        if: steps.publish.outcome == 'success'
        uses: actions/checkout@v4
        with:
          repository: bcgov-c/tenant-gitops-e27db1
          ref: develop
          token: ${{ secrets.ARGO_PAT }} # access token
          path: gitops

      - name: Update Helm Values and Commit
        id: helm
        if: steps.gitops.outcome == 'success'  # Only run if the previous step (publish) was successful
        run: |

          echo "Updating helm values to trigger ArgoCD deployment "
          
          # Navigate to the directory containing your Helm values file for the environment develop -> DEV, test -> test
          cd gitops/charts
          
          # Update the Helm values file with the new image tag and version
          DATETIME=$(date +'%Y-%m-%d %H:%M:%S')  # Get current date and time
          echo "Updating tag apitag: to ${{ steps.short_sha.outputs.SHORT_SHA }}"

          sed -i "s/apitag: .*/apitag: dev-${{ steps.short_sha.outputs.SHORT_SHA }} # Image Updated on $DATETIME/" ../deploy/dev_values_sso.yaml
          sed -i "s/apitag: .*/apitag: dev-${{ steps.short_sha.outputs.SHORT_SHA }} # Image Updated on $DATETIME/" diam-sso/values.yaml
          
          # Commit and push the changes
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          
          git add .
          
          git add ../deploy/dev_values.yaml
          
          # Repackage Helm Chart      

          cd frontend

          helm dependency build

          git add .
          
          git commit -m "Update Dev API image tag"
          git push origin develop  # Update the branch name as needed        